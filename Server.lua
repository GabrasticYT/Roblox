-- This file was generated using Luraph Obfuscator v13.5.6

return(function(SA,bA,wA,JA,BA,gA,lA,WA,NA,qA,oA,AA,fA,XA,GA,TA,IA,DA,eA,rA,YA,iA,vA,nA,HA,xA,aA,F,...)local R,Q=select,(pcall);local PA,s,A=0,nil,nil;local d=tostring;do repeat if PA==0X0 then s=vA;PA=1;else A=xA.yield;PA=2;continue;end;until PA>0x1;end;PA=0;local b,v,l,k,I=nil,nil,nil,nil,nil;do while PA~=0X5 do do if PA<=1 then if PA~=0X0 then I=string.unpack;PA=5;else b=0X2^0X34;PA=0X3;end;else if not(PA<=0X2)then if PA~=3 then l=string.gsub;PA=2;else v=lA;PA=0X4;continue;end;else k=eA.byte;PA=1;end;end;end;end;end;local D=(setmetatable);PA=0;local x,f=nil,nil;while 0.25135571624709285 do if PA==0X0 then x=string.rep;PA=0X001;continue;else do f=0X001;end;do break;end;end;end;PA=0X1;local T,a=nil,nil;repeat if PA==0 then a=coroutine.wrap;PA=2;continue;else T=BA;PA=0;continue;end;until PA>=0X002;local H=unpack;local L=nA;local p,C,M=assert,tonumber,{[0X00003]=DA,[2]=2082603104,[0X1]=false,[9]="c\066\A\109\e\%E\W\097",[0X0001]=0.9514914883842255,[9]=574878530,[5]=0X7cb0C904,[0X0]="\114/\085\Bp\o",[0x0001]=0.12410027537604307,[0x0]=false,[9]=0.207278366730425,[7]=2,[0x01]=2051639210,[0X1]=GA,[5]=0X6,[0X001]="\107'\039r\X\{",[1]=TA,[3]=0.2917468241180128,[0X1]=0X41778ada,[0]=0X5,[2]=0X7,[0x1]=0X009,[0X003]=4,[1]=0x0005,[YA]=0X9,[0X4]=0X1,[YA]=0x07};do PA=2;end;local o,G,tA,t=nil,nil,nil,nil;do while true do if not(PA<=1)then if PA~=2 then G=AA;PA=1;else do o=aA;end;PA=3;end;else if PA~=0X000 then do tA=0X1;end;PA=0;continue;else t=HA;break;end;end;end;end;local Y=next;local W=getfenv;PA=0X1;local N,P=nil,nil;while PA<0X3 do do if not(PA<=0)then if PA==0X0001 then do N=W();end;do PA=2;end;continue;else P={[0]=0X1};PA=0X0;do continue;end;end;else PA=0X3;end;end;end;local i,S,O,CA,J,c,r,w=nil,nil,nil,nil,nil,nil,nil,nil;for Ks=0x00,8 do if Ks<=0X003 then if Ks<=1 then if Ks==0x00000 then do iend;continue;else S=4294967296;continue;end;else if Ks~=0X2 then CA=function(...)do return R("#",...),{...};end;end;else O=IA;continue;end;end;else do if not(Ks<=0X5)then if not(Ks<=6)then if Ks~=0x7 then w=0x80000000;else do r=function()local rk=0;local vk=(nil);while rk<0x00002 do do if rk~=0x0000 then f=f+1;do rk=0X2;end;continue;else vk=k(i,f,f);rk=1;continue;end;end;end;do return vk;end;end;end;continue;end;else c=oA;end;else if Ks~=4 then i=l(s(i,0x5),"..",function(Em)do if k(Em,0X2)~=72 then local P4=(1);local z4=(nil);repeat if P4==0X0 then if J then local n1=(x(z4,J));local t1=(0X1);do while 0.384981278206624 do do if t1==0 then return n1;else do J=nil;end;t1=0X0;do continue;end;end;end;end;end;else return z4;end;do break;end;else z4=v(C(Em,0X10));P4=0x0;end;until false;else for tm=0,0X0001 do do if tm~=0 then return"";else J=C(s(Em,1,0x0001));continue;end;end;end;end;end;end);continue;else continue;end;end;end;end;end;local j,q,e=nil,nil,nil;for p8=0,2 do if not(p8<=0x0)then do if p8~=1 then e=string.match;continue;else do q=function()local P7,O7=nil,nil;for yd=0,0x2 do do if not(yd<=0X0)then if yd~=0x001 then do return P7;end;else f=O7;end;else P7,O7=I("\<\073\052",i,f);end;end;end;end;end;continue;end;end;else do j=WA;end;continue;end;end;local g,X=S-0X01,w-1;PA=0x002;local B,h=nil,nil;while-0X7Bc0537F do do if not(PA<=0x0)then if PA==1 then B=fA.insert;PA=0x0;else do local E3=(nil);for fq=0x0,0X1 do if fq~=0x0 then do for Rf=NA,31 do P[Rf]=E3;E3=E3*2;end;end;else E3=2;continue;end;end;end;PA=0X1;end;else h=function()local dM=(1);local hM,aM=nil,nil;repeat if not(dM<=0X0)then if dM~=0X00001 then return hM;else hM,aM=I("<i8",i,f);dM=0X00000;continue;end;else do f=aM;end;dM=2;do continue;end;end;until(false);end;break;end;end;end;local y=bit32.bxor;local K=(function()local tr,Pr,Rr=1,nil,nil;while tr<2 do if tr~=0 then Pr,Rr=I("\<\d",i,f);do tr=0;end;continue;else f=Rr;tr=2;end;end;return Pr;end);local U=JA;local u=(iA);PA=0X1;local E,z,m,V=nil,nil,nil,(nil);while 0.6447372449118568 do if not(PA<=0X1)then if PA~=2 then V=function()local sW,ZW=2,nil;repeat if not(sW<=0X00)then do if sW~=1 then ZW=E();sW=0x0;else return ZW;end;end;else do if ZW>X then return ZW-S;end;end;do sW=1;end;continue;end;until(false);end;break;else z={2,0X4,5};PA=0X00000;continue;end;else if PA==0 then m=function(mi,Zi,Bi)local Ui=nil;local wi=(2);repeat if wi<=0X0 then return Ui;else if wi==1 then Ui=Ui-Ui%0X1;wi=0x0;else Ui=(mi/P[Zi])%P[Bi];wi=0X0001;continue;end;end;until false;end;PA=3;else E=function()local ls,vs=0X0,0;while"Q\?\119"do local p4=(k(i,f,f));do f=f+1;end;ls=u(ls,U(c(p4,0X7F),vs));if c(p4,128)~=0x00 then else return ls;end;vs=vs+0X7;end;end;PA=2;continue;end;end;end;local Z=r();local FA=r();local pA=function(XJ)local VJ,tJ,ZJ=nil,nil,nil;do for VH=0X0,2 do if not(VH<=0)then if VH~=1 then ZJ=y(VJ[rA],FA);do continue;end;else tJ=y(VJ[0x1],FA);end;else VJ={k(i,f,f+0X3)};continue;end;end;end;local GJ=y(VJ[0X3],FA);local zJ=(y(VJ[4],FA));local EJ=0X0;while-281111958 do if not(EJ<=0)then if EJ~=0X1 then f=f+0x0004;do EJ=1;end;continue;else return zJ*0X1000000+GJ*65536+ZJ*256+tJ;end;else FA=(0X00C9*FA+XJ)%256;EJ=2;end;end;end;local RA=(function(Zu)local Tu,zu=nil,(nil);local mu=0X002;while'\057\044d\049\?'do if mu<=0X1 then if mu==0X0 then for jM=0X1,Tu,7997 do local lM=(1);local IM=(nil);do while lM<2 do if lM==0 then if IM>Tu then do IM=Tu;end;end;lM=0X00002;else IM=jM+7997-1;lM=0X0;end;end;end;local UM={k(i,f+jM-0X1,f+IM-1)};for XQ=0X0,0X1 do if XQ==0X0000 then for GL=NA,#UM do(UM)[GL]=y(UM[GL],Z);do Z=(Zu*Z+0Xed)%256;end;end;else zu=zu..v(H(UM));end;end;end;mu=0X0003;else return zu;end;else if not(mu<=0x2)then do if mu~=3 then zu="";mu=0;else f=f+Tu;mu=1;do continue;end;end;end;else Tu=q();mu=0X004;end;end;end;end);do PA=6;end;local QA,dA,OA,sA,kA=nil,nil,nil,nil,nil;do while"\056R\E\054Q"do if PA<=0x3 then if PA<=1 then if PA~=0 then function OA(uL,hL,cL)local xL,kL=hL[7],hL[0X006];local AL=hL[4];local dL,NL,iL=hL[0X008],hL[0x2],(hL[3]);local FL=hL[0X009];local VL=(hL[5]);local UL=D({},{__mode="v"});local QL=(nil);do QL=function(...)local xl=(0x0);local ol=({});local Bl=(0x1);local Ll=({[2]=ol,[1]=hL});local Vl=W();local Dl,cl=CA(...);Dl=Dl-1;for qN=0,Dl do do if iL>qN then do(ol)[qN]=cl[qN+1];end;else break;end;end;end;local fl=(Vl==N and cL or Vl);do if not VL then do cl=nil;end;else if not(AL)then else(ol)[iL]={n=Dl>=iL and Dl-iL+1 or 0x0000,H(cl,iL+0X1,Dl+1)};end;end;end;if fl==Vl then else(o)(QL,fl);end;repeat local DK=(dL[Bl]);local qK=DK[0X3];do Bl=Bl+0x1;end;if qK<51 then do if not(qK>=25)then if not(qK>=12)then if qK>=6 then if qK<0X9 then if not(qK>=0x7)then local Yx=DK[0x0002];(ol[Yx])(ol[Yx+0X1]);do xl=Yx-1;end;elseif qK==0X0008 then if ol[DK[0X5]]~=ol[DK[0x4]]then else Bl=DK[0X0002];end;else ol[DK[0X00002]]=fl[DK[0X006]];end;else if not(qK<0X0000A)then if qK~=11 then local ae=uL[DK[5]];ae[1][ae[2]]=ol[DK[2]];else Bl=DK[5];end;else xl=DK[0x002];do(ol)[xl]=ol[xl]();end;end;end;else if qK<3 then if not(qK>=1)then(ol)[DK[2]]=ol[DK[0X5]]<DK[0X1];elseif qK~=0X2 then local dD=(DK[2]);local OD,gD=ol[dD]();if not(OD)then else for Kq=0X1,DK[4]do(ol)[dD+Kq]=gD[Kq];end;Bl=DK[5];end;else ol[DK[2]]=ol[DK[5]]==ol[DK[4]];end;else do if not(qK>=0x4)then local Fm=(uL[DK[5]]);do ol[DK[2]]=Fm[1][Fm[2]];end;else if qK==0X005 then(ol)[DK[2]]=ol[DK[0X5]]%DK[0X1];else do if not(ol[DK[5]]<ol[DK[4]])then Bl=DK[0X2];end;end;end;end;end;end;end;else do if qK>=0x00012 then if not(qK<21)then do if not(qK<23)then if qK==0X018 then repeat local HP,YP=UL,ol;do if#HP>0 then local m4=({});for EL,tL in Y,HP do for CK,iK in Y,tL do do if iK[0X00001]==YP and iK[2]>=0 then local LW=(iK[2]);if not m4[LW]then do(m4)[LW]={YP[LW]};end;end;(iK)[1]=m4[LW];do(iK)[2]=1;end;end;end;end;end;end;end;until true;return ol[DK[2]]();else local TX=Dl-iL;local UX=DK[2];if not(TX<0)then else TX=-1;end;for Ce=UX,UX+TX do ol[Ce]=cl[iL+(Ce-UX)+0X1];end;xl=UX+TX;end;else if qK==22 then(ol)[DK[2]]=j(ol[DK[0X5]]);else fl[DK[0X0006]]=ol[DK[0X00002]];end;end;end;else if qK<19 then do if not(not(ol[DK[0X005]]<=ol[DK[4]]))then else do Bl=DK[0x02];end;end;end;else if qK==20 then for h2=DK[0x2],DK[5]do ol[h2]=nil;end;else(ol)[DK[2]]=ol[DK[0X0005]][DK[1]];end;end;end;elseif not(qK<0xF)then if qK>=16 then if qK==17 then do ol[DK[2]][DK[6]]=ol[DK[4]];end;else repeat local Lq,rq=UL,ol;if not(#Lq>0x0000)then else local CS=({});for im,Km in Y,Lq do for cE,pE in Y,Km do if pE[1]==rq and pE[0X2]>=0 then local po=pE[0X02];do if not CS[po]then CS[po]={rq[po]};end;end;(pE)[1]=CS[po];do pE[0X00002]=0X0001;end;end;end;end;end;until true;local LI=(DK[0X2]);do return ol[LI](H(ol,LI+0X1,xl));end;end;else local og=(DK[2]);xl=og+DK[0X5]-1;ol[og](H(ol,og+0x1,xl));xl=og-0x01;end;else if qK>=13 then if qK~=14 then ol[DK[2]]=ol[DK[0X5]]>=ol[DK[0X0004]];else if DK[0X4]~=0X0007f then(ol)[DK[0X2]]=ol[DK[5]];else do Bl=Bl-1;end;(dL)[Bl]={[2]=(DK[2]-0Xb4),[0X00003]=0X4F,[5]=(DK[0X5]-0x0000b4)};end;end;else do(ol)[DK[2]]=ol[DK[0X5]]/DK[1];end;end;end;end;end;else if qK<38 then if qK>=31 then if not(qK>=34)then if qK>=32 then if qK==0X21 then local FP=(DK[0X5]);(ol)[DK[2]]=ol[FP]..ol[FP+1];else if DK[0X4]==0X007b then Bl=Bl-0X1;do(dL)[Bl]={[0X3]=35,[2]=(DK[0X2]-0xD2),[0X5]=(DK[5]-210)};end;else ol[DK[2]]=-ol[DK[0X5]];end;end;else local EG=(DK[0x02]);do ol[EG]=ol[EG](ol[EG+0x1]);end;do xl=EG;end;end;else if qK<36 then if qK~=0X23 then do ol[DK[0X2]]=ol[DK[5]]<=ol[DK[4]];end;else do repeat local xH,aH=UL,(ol);if#xH>0X00000 then local RT={};for gN,QN in Y,xH do for BS,fS in Y,QN do if fS[0x1]==aH and fS[0X0002]>=0X000 then local Ep=(fS[2]);do if not(not RT[Ep])then else RT[Ep]={aH[Ep]};end;end;fS[1]=RT[Ep];do fS[2]=0X1;end;end;end;end;end;until true;end;return ol[DK[2]];end;else if qK~=37 then do ol[DK[0X2]][ol[DK[5]]]=DK[0X1];end;else ol[DK[2]]=y(ol[DK[5]],ol[DK[4]]);end;end;end;elseif not(qK>=0x1C)then if not(qK<0X1a)then do if qK~=27 then do xl=DK[0X2];end;ol[xl]();do xl=xl-1;end;else ol[DK[0X2]]=ol[DK[0X00005]]+ol[DK[4]];end;end;else do(ol)[DK[0x2]]=u(ol[DK[0x5]],ol[DK[0X04]]);end;end;else if qK<0X001D then local tS=((DK[0X4]-1)*0x32);local bS=(DK[2]);local ZS=ol[bS];for cV=1,DK[5]do ZS[tS+cV]=ol[bS+cV];end;else do if qK~=30 then(ol[DK[0X00002]])[DK[6]]=DK[0x0001];else do if ol[DK[5]]<ol[DK[4]]then do Bl=DK[0x2];end;end;end;end;end;end;end;else do if qK<44 then if not(qK<0x000029)then do if not(qK>=0X2A)then(ol)[DK[0X2]]=ol[DK[0X5]]%ol[DK[0X4]];else if qK==0X00002B then if ol[DK[0X0005]]~=ol[DK[0X04]]then Bl=DK[0x2];end;else do(ol)[DK[2]]=ol[DK[0X5]]>DK[1];end;end;end;end;else if not(qK<39)then if qK~=0X28 then(ol)[DK[0x2]]=ol[DK[0X5]]>=DK[1];else if DK[0X0004]~=202 then repeat local TF,wF,mF=UL,ol,(DK[0X00002]);if#TF>0 then local ar={};for x9,m9 in Y,TF do for i4,u4 in Y,m9 do do if not(u4[1]==wF and u4[2]>=mF)then else local hF=(u4[2]);if not(not ar[hF])then else do(ar)[hF]={wF[hF]};end;end;(u4)[1]=ar[hF];do u4[2]=1;end;end;end;end;end;end;until-1186047888;else Bl=Bl-1;(dL)[Bl]={[0X5]=(DK[0X5]-82),[3]=75,[2]=(DK[2]-82)};end;end;else local Um=(DK[0X2]);local em=ol[Um+0X0002];local cm,Dm=ol[Um],(ol[Um+1]);(ol)[Um]=a(function()for xc=cm,Dm,em do A(true,xc);end;end);Bl=DK[5];end;end;else if not(qK<0X002f)then if not(qK<49)then do if qK==0X0032 then(ol)[DK[2]]=ol[DK[0X0005]]<ol[DK[4]];else local xi=(DK[0X2]);(ol[xi])(ol[xi+1],ol[xi+2]);do xl=xi-1;end;end;end;else do if qK==0x000030 then do ol[DK[2]]={};end;else local K7=DK[0X2];local m7=(a(function(...)(A)();do for BR in...do(A)(true,BR);end;end;end));m7(ol[K7],ol[K7+0X1],ol[K7+2]);xl=K7;ol[K7]=m7;Bl=DK[0X5];end;end;end;elseif not(qK>=0X00002D)then if DK[4]==228 then Bl=Bl-0x1;do dL[Bl]={[5]=(DK[0X5]-225),[3]=0X5d,[0X2]=(DK[0X2]-225)};end;elseif DK[4]==14 then do Bl=Bl-1;end;do(dL)[Bl]={[3]=94,[2]=(DK[2]-142),[5]=(DK[0X5]-142)};end;else do ol[DK[2]]=#ol[DK[5]];end;end;else if qK~=46 then(dA)[DK[0X5]]=ol[DK[2]];else do ol[DK[0X2]]=ol[DK[0X5]]/ol[DK[0X4]];end;end;end;end;end;end;end;end;else if qK>=0x4d then if qK<0x0005a then do if qK>=83 then if qK>=0x056 then if qK<0X58 then do if qK~=0x57 then local Mg,jg=DK[0X00002],(DK[5]);if jg~=0 then xl=Mg+jg-1;end;local Tg,Rg,Jg=DK[4],nil,(nil);do if jg~=1 then Rg,Jg=CA(ol[Mg](H(ol,Mg+1,xl)));else Rg,Jg=CA(ol[Mg]());end;end;if Tg==1 then xl=Mg-0x1;else if Tg~=0 then Rg=Mg+Tg-2;do xl=Rg+0X001;end;else Rg=Rg+Mg-0X1;do xl=Rg;end;end;local Xj=0X0000;do for Uv=Mg,Rg do Xj=Xj+1;ol[Uv]=Jg[Xj];end;end;end;else(ol)[DK[0X2]]=U(ol[DK[5]],ol[DK[4]]);end;end;else if qK==0X59 then local Dc=(DK[2]);xl=Dc+DK[5]-0X1;do(ol)[Dc]=ol[Dc](H(ol,Dc+1,xl));end;xl=Dc;else ol[DK[2]]=false;end;end;else do if not(qK<84)then if qK~=0X55 then local pJ,MJ=DK[0x002],(ol[DK[5]]);(ol)[pJ+0X1]=MJ;(ol)[pJ]=MJ[DK[0X0001]];else if DK[0X4]==0X0092 then do Bl=Bl-0X1;end;do dL[Bl]={[0X5]=(DK[0X5]-193),[2]=(DK[2]-0X0c1),[0X3]=35};end;else local IQ=DK[0x00002];for T1=IQ,IQ+(DK[0X5]-0X00001)do(ol)[T1]=cl[iL+(T1-IQ)+1];end;end;end;else local sy=DK[2];do ol[sy]=ol[sy](ol[sy+1],ol[sy+0X2]);end;xl=sy;end;end;end;else if qK<0X0050 then if qK>=78 then if qK==79 then ol[DK[2]]=nil;else if not(not ol[DK[0x2]])then else do Bl=DK[0X00005];end;end;end;else(ol[DK[0x00002]])[ol[DK[5]]]=ol[DK[0X4]];end;else if not(qK<81)then if qK==0X52 then local t0,W0=DK[2],(DK[4]-0X1)*50;local f0=ol[t0];for qY=0X1,xl-t0 do f0[W0+qY]=ol[t0+qY];end;else if ol[DK[5]]==DK[0X1]then do Bl=DK[2];end;end;end;else if ol[DK[5]]<=ol[DK[4]]then Bl=DK[0X2];end;end;end;end;end;else if not(qK<96)then if not(qK>=99)then if not(qK>=97)then ol[DK[2]]=L(ol[DK[5]],ol[DK[0X4]]);else do if qK~=0X062 then local L2=(DK[0X02]);local j2,D2=ol[L2]();if j2 then do Bl=DK[0x5];end;(ol)[L2+0X3]=D2;end;else local gq=(DK[2]);local Nq,Lq,Vq=ol[gq]();if Nq then(ol)[gq+1]=Lq;ol[gq+0x002]=Vq;Bl=DK[5];end;end;end;end;else do if qK<101 then if qK~=0X64 then do(ol)[DK[0X02]]=DK[0X06];end;else(ol)[DK[2]]=dA[DK[5]];end;else do if qK~=0X66 then(ol)[DK[0x2]]=ol[DK[0X05]]-ol[DK[4]];else ol[DK[2]]=DK[0x00006];end;end;end;end;end;else if qK<0X5D then do if not(qK>=91)then(Ll)[DK[0x5]]=ol[DK[2]];else if qK~=0x5c then local FQ=(DK[2]);local RQ=(a(function(...)(A)();for TQ,nQ in...do A(true,TQ,nQ);end;end));(RQ)(ol[FQ],ol[FQ+1],ol[FQ+0X2]);xl=FQ;(ol)[FQ]=RQ;do Bl=DK[0X5];end;else repeat local nW,CW=UL,ol;if not(#nW>0x0)then else local yi=({});for ow,xw in Y,nW do for w3,e3 in Y,xw do if e3[1]==CW and e3[0X2]>=0X000 then local Sj=(e3[0X2]);do if not(not yi[Sj])then else(yi)[Sj]={CW[Sj]};end;end;do(e3)[1]=yi[Sj];end;(e3)[2]=0X1;end;end;end;end;until true;local nj=(DK[0X0002]);return ol[nj](ol[nj+1]);end;end;end;else if not(qK>=0X5e)then if DK[4]==0x0040 then do Bl=Bl-0X1;end;dL[Bl]={[5]=(DK[5]-162),[0X0002]=(DK[0X0002]-162),[0x3]=14};elseif DK[0x4]==9 then Bl=Bl-1;(dL)[Bl]={[0X5]=(DK[5]-0X5C),[2]=(DK[2]-0X00005C),[0X03]=0X005e};elseif DK[0x00004]~=109 then do repeat local bB,uB=UL,(ol);if not(#bB>0)then else local ma=({});for ZG,OG in Y,bB do for QP,NP in Y,OG do do if not(NP[0X1]==uB and NP[0X0002]>=0X00)then else local ku=NP[0X2];if not(not ma[ku])then else ma[ku]={uB[ku]};end;(NP)[1]=ma[ku];NP[2]=1;end;end;end;end;end;until true;end;do return H(ol,DK[0X02],xl);end;else do Bl=Bl-1;end;(dL)[Bl]={[0X2]=(DK[2]-0XCc),[0x3]=0X2C,[5]=(DK[0X00005]-0x0000Cc)};end;else if qK==0X5f then local FG=DK[2];(ol)[FG]=ol[FG](H(ol,FG+1,xl));xl=FG;else repeat local E1,a1=UL,(ol);if not(#E1>0X0)then else local Pu=({});for KY,bY in Y,E1 do do for WS,hS in Y,bY do if not(hS[0X0001]==a1 and hS[0X0002]>=0)then else local wo=hS[2];if not Pu[wo]then(Pu)[wo]={a1[wo]};end;(hS)[1]=Pu[wo];do(hS)[0X2]=1;end;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(qK>=0X40)then if not(qK>=57)then if qK<54 then do if not(qK>=0X00034)then if DK[4]==0x095 then Bl=Bl-1;(dL)[Bl]={[0x3]=0X05d,[2]=(DK[2]-0x00A),[5]=(DK[5]-10)};else do if not(ol[DK[0X2]])then else do Bl=DK[0X0005];end;end;end;end;else if qK~=53 then if DK[0x00004]==200 then do Bl=Bl-0X0001;end;(dL)[Bl]={[0X3]=0X23,[0x002]=(DK[2]-0X57),[0X005]=(DK[5]-0X57)};elseif DK[0X00004]==231 then Bl=Bl-0x1;(dL)[Bl]={[3]=94,[0X05]=(DK[0X00005]-0xA6),[0X0002]=(DK[0X2]-0XA6)};else repeat local D1,G1=UL,(ol);if not(#D1>0X0)then else local Tl=({});for gh,Nh in Y,D1 do for Oi,Ki in Y,Nh do if not(Ki[0X01]==G1 and Ki[2]>=0x0)then else local R_=Ki[2];if not Tl[R_]then Tl[R_]={G1[R_]};end;(Ki)[0X1]=Tl[R_];(Ki)[0X2]=1;end;end;end;end;until true;local ci=(DK[2]);do return H(ol,ci,ci+DK[0x005]-0X02);end;end;else(ol)[DK[2]]=Ll[DK[0X0005]];end;end;end;else if not(qK>=0X00037)then ol[DK[2]]=ol[DK[0X5]]*ol[DK[4]];else if qK==56 then do if not(not(ol[DK[5]]<=DK[0X1]))then else Bl=DK[0X00002];end;end;else do ol[DK[0X2]]=ol[DK[0X5]]~=ol[DK[4]];end;end;end;end;else if qK>=0X3C then if not(qK<0x3e)then do if qK~=0x3F then local cp=(ol[DK[5]]/ol[DK[4]]);ol[DK[2]]=cp-cp%1;else local OX=(DK[0x2]);local cX,gX=ol[OX]();if cX then(ol)[OX+1]=gX;do Bl=DK[5];end;end;end;end;else if qK==61 then do if ol[DK[0X5]]==DK[0X01]then else Bl=DK[2];end;end;else(ol)[DK[2]]=ol[DK[5]]<=DK[1];end;end;else if not(qK<0X3a)then if qK~=0X3B then(ol)[DK[0X002]]=ol[DK[0X5]]*DK[1];else do(ol)[DK[2]]=ol[DK[5]]^ol[DK[4]];end;end;else local J6=(DK[0x0002]);local m6=a(function(...)(A)();do for z6,r6,B6,F6,y6,u6,N6,S6,Z6,L6 in...do(A)(true,{z6,r6,B6,F6,y6,u6,N6,S6,Z6,L6});end;end;end);(m6)(ol[J6],ol[J6+0X1],ol[J6+0x002]);xl=J6;(ol)[J6]=m6;Bl=DK[0x05];end;end;end;else if not(qK<70)then if qK<0X00049 then if not(qK<71)then if qK~=72 then ol[DK[0X2]]=true;else do ol[DK[2]]=c(ol[DK[5]],ol[DK[0X4]]);end;end;else(ol)[DK[2]]={H({},0X1,DK[0X5])};end;else if not(qK<75)then do if qK~=76 then(ol)[DK[0X2]]=not ol[DK[0x005]];else if not(not(DK[6]<ol[DK[4]]))then else Bl=DK[2];end;end;end;else do if qK~=74 then(ol)[DK[0x2]]=ol[DK[5]]==DK[0x1];else(ol)[DK[0X2]]=ol[DK[0X005]][ol[DK[4]]];end;end;end;end;else do if not(qK<67)then if not(qK>=68)then local nI=DK[5];local jI=(DK[2]);xl=jI+nI-1;repeat local ih,Fh=UL,ol;if not(#ih>0)then else local Qi={};for fB,YB in Y,ih do for gS,eS in Y,YB do if not(eS[0X1]==Fh and eS[0x00002]>=0)then else local nm=eS[0x2];do if not Qi[nm]then Qi[nm]={Fh[nm]};end;end;(eS)[0X1]=Qi[nm];eS[2]=1;end;end;end;end;until true;return ol[jI](H(ol,jI+1,xl));else do if qK~=69 then ol[DK[2]]=ol[DK[0X0005]]>ol[DK[4]];else local jj=(nil);local Uj=(NL[DK[0X5]]);local lj=(Uj[0X1]);local Oj=(#lj);if not(Oj>0X0)then else do jj={};end;for as=0X0001,Oj do local js=lj[as];do if js[1]==0x00000 then do(jj)[as-1]={ol,js[2]};end;else do jj[as-1]=uL[js[2]];end;end;end;end;B(UL,jj);end;ol[DK[0X2]]=OA(jj,Uj,fl);end;end;end;else if not(qK<0X41)then if qK~=66 then local NF=DK[0x2];ol[NF](H(ol,NF+0X01,xl));xl=NF-0X1;else local Sm=DK[0X005];local xm=(ol[Sm]);for zv=Sm+1,DK[4]do xm=xm..ol[zv];end;(ol)[DK[2]]=xm;end;else do ol[DK[0X00002]]=ol[DK[5]]~=DK[1];end;end;end;end;end;end;end;end;until false;end;end;(o)(QL,cL);return QL;end;PA=0X002;continue;else dA[1]=QA;PA=5;continue;end;else do if PA==0x2 then function sA()local q0,J0=nil,nil;for J6=0X0,2 do if J6<=0X0 then continue;else if J6~=1 then J0={};else q0={};end;end;end;local B0,P0,k0,x0=1,nil,nil,nil;do while B0~=3 do if B0<=0X00 then x0=0X1;do B0=3;end;continue;else do if B0~=0X1 then k0={qA,{},qA,nil,nil,{},nil,{},qA};B0=0X0;continue;else do P0={};end;do B0=0X002;end;end;end;end;end;end;k0[7]=E();k0[NA]=P0;B0=1;local A0=nil;repeat if B0==0X00000 then do A0=q()-0X000099Df;end;B0=2;continue;else do for Hn=1,E()do P0[Hn]={r(),E()};end;end;B0=0;end;until B0>0x1;local y0=(k0[0x2]);for r8=0,A0-0x1 do do(y0)[r8]=sA();end;end;k0[0XF]=r();do k0[16]=q();end;B0=0X00001;local F0=nil;repeat do if B0~=0X0000 then(k0)[13]=q();B0=0;continue;else F0=q()-63619;break;end;end;until false;local R0=r();B0=0X005;local s0,M0=nil,(nil);while B0<=7 do if B0<=0X003 then if B0<=1 then if B0==0 then for eY=0x1,F0 do local vY,GY=nil,(nil);for e0=0,1 do if e0==0X0 then vY=nil;continue;else GY=r();continue;end;end;for S2=0X0,1 do if S2~=0x0 then if GY==28 then vY=s(RA(R0),q());elseif GY==0XF7 then vY=h();elseif GY==0x64 then vY=s(RA(R0),q());elseif GY==0x000049 then vY=wA;elseif GY==0X5f then vY=K()+q();elseif GY==rA then vY=s(RA(R0),r());elseif GY==20 then vY=false;elseif GY==0X8D then do vY=h();end;elseif GY==32 then vY=s(RA(R0),K()+q());elseif GY==0XFB then vY=s(RA(R0),r());elseif GY==102 then do vY=s(RA(R0),0X5);end;elseif GY~=0X63 then else vY=K();end;else q0[eY-0X001]=x0;continue;end;end;local rY,TY={vY,{}},(0X000);while TY<3 do if TY<=0 then(J0)[x0]=rY;TY=2;else do if TY~=0X1 then x0=x0+0X00001;TY=1;else if s0 then QA[tA]=rY;tA=tA+1;end;TY=3;end;end;end;end;end;B0=1;else(k0)[0x13]=r();do B0=0X0002;end;continue;end;else do if B0==2 then M0=r();B0=7;do continue;end;else k0[3]=E();do B0=8;end;end;end;end;elseif not(B0<=0X00005)then if B0==0X6 then k0[0Xc]=r();B0=0X0003;continue;else(k0)[SA]=m(M0,0X001,1)~=0;B0=0X4;continue;end;else if B0~=4 then do s0=r()~=0x0;end;do B0=0;end;else k0[4]=m(M0,2,0X1)~=0X0;B0=6;do continue;end;end;end;end;(k0)[0X009]=E();local K0=k0[bA];B0=2;local E0=nil;do while B0<=0X3 do if B0<=1 then if B0==0 then for Uk=0X1,E0 do(K0)[Uk]={[7]=true,[2]=V(),[1]=r(),[3]=gA,[5]=V(),[0X6]=r(),[0X0007]=2005060306,[0X4]=V(),[7]=r(),[3]=E()};end;do B0=3;end;do continue;end;else do k0[0X10]=q();end;do B0=4;end;end;else if B0~=0x2 then do for PB=0x0001,E0 do local yB=k0[0X008][PB];do for CV,bV in ipairs(z)do local jV=M[bV];local AV=(yB[jV]);if AV==0X007 then local Y4=1;local C4,X4=nil,(nil);while Y4~=3 do if Y4<=0 then if X4 then do yB[jV]=X4[0x1];end;local XC,pC=1,nil;while XC~=0X2 do if XC~=0 then pC=X4[0X2];XC=0X00;continue;else(pC)[#pC+1]={yB,jV};XC=0X2;end;end;end;Y4=0X3;else do if Y4==0X1 then C4=q0[yB[bV]];Y4=0x2;continue;else X4=J0[C4];Y4=0;continue;end;end;end;end;else if AV==XA then(yB)[bV]=PB+yB[bV]+0X1;end;end;end;end;end;end;do B0=1;end;else E0=q()-0X14A03;B0=0X0;do continue;end;end;end;end;end;return k0;end;PA=0X004;else PA=0X00001;continue;end;end;end;else do if not(PA<=0X5)then if not(PA<=6)then if PA~=7 then dA={};do PA=0X3;end;continue;else return OA(nil,kA,N)(...);end;else QA={};PA=8;continue;end;else do if PA~=0x04 then do QA=qA;end;do PA=7;end;do continue;end;else kA=sA();PA=0;continue;end;end;end;end;end;end;end;end)(5,0X008,true,bit32.lshift,rawset,0.7434235313374505,string.char,bit32.bnot,0X1,nil,bit32.band,rawget,table,0Xa,0.6191425871263024,4,error,"\k\111\097\082-\P",string,2,0X9,bit32.bor,string.sub,bit32.rshift,type,coroutine,setfenv,{17419,957771283,0xEfB42295,3903093692,2113667882,1000029456,674624784,2145599239,0x00001a47A4b3},...);