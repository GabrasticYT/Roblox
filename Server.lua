-- This file was generated using Luraph Obfuscator v13.5.4

return(function(yh,jh,Uh,Oh,oh,bh,Ch,Gh,Wh,ch,Kh,Hh,xh,Sh,uh,Eh,Rh,Bh,Mh,qh,hh,zh,Yh,ph,...)local e,N=select,pcall;local t,s,x,z=nil,nil,nil,(nil);for sk=0,0X3 do if sk<=1 then if sk==0 then t=xh;else do s=Eh;end;continue;end;else if sk==2 then do x=string.char;end;else z=zh.gsub;end;end;end;local h,E,p,Q=nil,nil,nil,nil;for qU=0x0,0X3 do if qU<=0X0001 then if qU==0 then do h=table.insert;end;else E=zh.rep;end;else if qU~=0X2 then Q=Wh;continue;else p=1;end;end;end;local Ph,j,u=0X1,getfenv,zh.unpack;local X,G,Vh,M,b,r,g=error,rawget,0X3,nil,nil,nil,nil;while Vh~=0x04 do if not(Vh<=0X1)then if Vh==2 then b=hh;Vh=0X000;else M=4294967296;Vh=2;continue;end;else do if Vh==0 then r={[0X7]=7,[4]=Sh,[3]=0x7,[0X2]=7,[0x3]=3,[0X5]=Gh,[1]=6,[0X0]=0};Vh=1;else g=oh;Vh=4;end;end;end;end;local w,U,k=assert,nil,(nil);for ul=0x0,0X1 do if ul~=0 then k=Kh;do continue;end;else U=bh;continue;end;end;local C=setfenv;local V=M-1;local v,Y=nil,nil;do for C3=0,2 do if not(C3<=0X0)then if C3==1 then do Y=j();end;continue;else end;else v=Rh;continue;end;end;end;Vh=0X006;local R,O,H,q,y,B,c=nil,nil,nil,nil,nil,nil,(nil);while 0.38232426730199254 do do if Vh<=0X3 then if not(Vh<=1)then do if Vh==2 then y=0X80000000;Vh=0X0004;elsedo Vh=0;end;do continue;end;end;end;elseif Vh~=0 then do q=function()local pL=v(O,p,p);p=p+0x1;return pL;end;end;Vh=0x2;continue;else do Vh=0X5;end;do continue;end;end;else do if not(Vh<=5)then if Vh~=6 then do c=function()local GA,qA=u("<I4",O,p);local KA=0X00001;repeat do if KA==0X0000 then return GA;else p=qA;KA=0;end;end;until false;end;end;break;else do R=Uh.yield;end;do Vh=0X0003;end;continue;end;else if Vh~=4 then O=z(s(O,5),'.\.',function(HF)do if v(HF,2)~=72 then local A4=x(g(HF,16));do if H then local T1=(nil);do for NK=0X0,0x002 do do if not(NK<=0X00000)then do if NK~=0X1 then return T1;else H=uh;end;end;else T1=E(A4,H);end;end;end;end;else return A4;end;end;else H=g(s(HF,1,0X00001));return"";end;end;end);Vh=0x1;else B=Ch^52;do Vh=7;end;end;end;end;end;end;end;local d,f,K,m,I,A=nil,nil,nil,nil,nil,(nil);local S,W=setmetatable,(string.match);do for La=0,0X06 do if La<=0X2 then do if La<=0x0 then d={[0X0]=1};continue;else if La~=0X1 then do f=function()local pL,RL=u('<\i8',O,p);local oL=0X0;while(true)do if oL~=0X0 then return pL;else do p=RL;end;oL=0x1;end;end;end;end;else do local W2=(0X0);local S2=(nil);repeat if W2==0X0 then do S2=0X0002;end;W2=0X1;continue;else do for CC=1,0X1F do local zC=0;repeat if zC==0x0 then(d)[CC]=S2;zC=0X1;do continue;end;else S2=S2*2;zC=2;do continue;end;end;until zC>0X1;end;end;W2=2;end;until W2==0x02;end;end;end;end;elseif La<=4 then if La==3 then K=Uh.wrap;else do m=jh.band;end;end;else do if La~=0X005 then A=function()local sa,Oa=nil,nil;for sJ=0,0X2 do if sJ<=0 then sa,Oa=u("\<d",O,p);else if sJ==0X001 then p=Oa;else return sa;end;end;end;end;else I=jh.bxor;end;end;end;end;end;local L,Z,i,J=y-1,nil,nil,nil;for Sc=0X0,0X2 do if not(Sc<=0X00)then if Sc==1 then i=ph;do continue;end;else J={0x0005,0X02,4};continue;end;else Z=Yh;continue;end;end;local l=function()local VR=(0X0);local sR=0;do while-0X144F2f24 do local F9=v(O,p,p);p=p+1;sR=k(sR,Z(m(F9,0X0007F),VR));if m(F9,0X80)~=0 then else return sR;end;VR=VR+7;end;end;end;local D=(q());local T=q();local wh=(function(oS)local aS,XS,eS,ZS=nil,nil,nil,(nil);do for Q_=0x0,0X03 do if not(Q_<=1)then if Q_~=0X2 then ZS=I(aS[3],T);else eS=I(aS[2],T);continue;end;else if Q_==0X00 then aS={v(O,p,p+0x3)};else XS=I(aS[1],T);end;end;end;end;local US=(I(aS[4],T));local JS=(0x1);while JS~=0X00002 do if JS==0X0 then do p=p+4;end;JS=2;do continue;end;else T=(253*T+oS)%256;JS=0X0;end;end;return US*0x1000000+ZS*65536+eS*Oh+XS;end);local gh=(function(...)return e(Hh,...),{...};end);local eh=function(A5)local C5=c();local l5=(nil);local J5=0x0;while-0X02C9fB96c do if not(J5<=1)then if J5~=2 then p=p+C5;J5=2;continue;else return l5;end;elseif J5==0 then l5="";J5=1;do continue;end;else for dw=1,C5,7997 do local ow,Aw=nil,(nil);do for y7=0X0,0X4 do if not(y7<=1)then if y7<=0X2 then do Aw={v(O,p+dw-1,p+ow-1)};end;else if y7~=3 then l5=l5..x(U(Aw));do continue;end;else for T4=0X1,#Aw do local n4=1;while n4<0x2 do do if n4==0X0 then D=(A5*D+qh)%0X100;n4=2;else(Aw)[T4]=I(Aw[T4],D);n4=0X0;end;end;end;end;end;end;else if y7==0x00000 then ow=dw+0x1F3d-1;else do if ow>C5 then ow=C5;end;end;end;end;end;end;end;J5=0X003;continue;end;end;end;local F=(function()local Ug=l();if not(Ug>L)then else return Ug-M;end;return Ug;end);local th={};Vh=2;local a,Nh,Xh,sh,o=nil,nil,nil,nil,(nil);repeat if not(Vh<=0x1)then if not(Vh<=2)then if Vh==3 then do o=Bh;end;Vh=0X5;else Nh={};do Vh=1;end;end;else a=function(Qh,Th,rh)local ah=(0X0);local kh=nil;while ah~=0X2 do do if ah~=0 then kh=kh-kh%1;ah=2;continue;else kh=(Qh/d[Th])%d[rh];do ah=1;end;do continue;end;end;end;end;return kh;end;Vh=4;continue;end;else if Vh==0X0 then function sh()local ba,pa=1,(nil);while ba<=1 do if ba~=0x0000 then ba=0;do continue;end;else pa={nil,{},uh,uh,uh,nil,nil,{},{}};ba=0X02;end;end;local Ja,Ya,Ga=nil,nil,(nil);for zt=0,2 do if zt<=0X0 then Ja={};else if zt==1 then Ya={};else Ga={};end;end;end;ba=5;local ka=(nil);do repeat do if ba<=0X004 then if not(ba<=1)then do if ba<=2 then pa[7]=l();ba=0X8;else if ba~=0X3 then(pa)[14]=c();ba=0;else do pa[0Xf]=q();end;do ba=9;end;continue;end;end;end;else if ba~=0X0 then pa[ch]=a(ka,0x1,1)~=0x0;do ba=0Xa;end;else do(pa)[1]=l();end;do ba=2;end;end;end;else if not(ba<=0X0006)then if not(ba<=0x0007)then if ba~=8 then(pa)[15]=q();ba=0x6;else ka=q();ba=1;end;else(pa)[0X00f]=c();ba=4;end;else if ba~=0X5 then(pa)[0xB]=c();ba=7;else do(pa)[17]=c();end;ba=0X3;continue;end;end;end;end;until ba>0X00009;end;local sa,Sa,Ia,Ta=nil,nil,nil,nil;for gC=0X0,9 do do if not(gC<=4)then if gC<=0X6 then if gC~=0X5 then Ia=q();continue;else Sa=1;continue;end;else if not(gC<=0X007)then if gC==0x8 then for TU=0x01,sa do local hU,jU,xU=nil,nil,nil;for Q5=0X0,4 do if not(Q5<=1)then if Q5<=0X2 then(Ga)[TU-1]=Sa;continue;else if Q5==0X003 then do if hU==233 then jU=s(eh(Ia),13);elseif hU==0Xd2 then jU=true;elseif hU==0x09 then jU=false;elseif hU==0X23 then jU=s(eh(Ia),yh);elseif hU==212 then jU=A();elseif hU==0X5B then do jU=f();end;elseif hU==152 then do jU=f();end;elseif hU==0Xc0 then jU=s(eh(Ia),q());elseif hU==Ch then jU=c();elseif hU==215 then jU=s(eh(Ia),q());elseif hU~=38 then else do jU=f();end;end;end;continue;else do xU={jU,{}};end;end;end;else if Q5==0x00000 then hU=q();else do jU=uh;end;end;end;end;(Ya)[Sa]=xU;local CU=(0);repeat if CU~=0 then do if not(Ta)then else do(Nh)[Ph]=xU;end;Ph=Ph+0x1;end;end;CU=2;continue;else do Sa=Sa+1;end;do CU=0x1;end;continue;end;until CU==0X2;end;else(pa)[Mh]=q();continue;end;else Ta=q()~=0;end;end;else if gC<=1 then if gC~=0 then pa[0xA]=q();do continue;end;else pa[5]=a(ka,Ch,0x1)~=0;continue;end;else if gC<=2 then pa[0x6]=Ja;continue;else if gC==3 then for bl=0X1,l()do do(Ja)[bl]={q(),l()};end;end;do continue;end;else sa=c()-0x47F8;end;end;end;end;end;end;local la=(pa[9]);local da=c()-39987;do for NK=0x00,1 do if NK~=0 then for JO=0X00001,da do local EO=nil;local kO=0X0;while(true)do do if kO==0 then do EO=pa[9][JO];end;kO=0X001;continue;else for bz,dz in ipairs(J)do local vz,Uz=nil,nil;for Jq=0,2 do if not(Jq<=0X000)then if Jq~=1 then do if Uz==15 then local ND,UD=nil,(nil);for HU=0x0,0X1 do if HU~=0 then UD=Ya[ND];continue;else ND=Ga[EO[dz]];end;end;if not(UD)then else do(EO)[vz]=UD[0X00001];end;local Xm=nil;local ym=1;do repeat do if ym~=0X00000 then Xm=UD[2];ym=0X0000;continue;else do Xm[#Xm+Sh]={EO,vz};end;ym=0X2;continue;end;end;until ym>=0X2;end;end;elseif Uz~=2 then else EO[dz]=JO+EO[dz]+1;end;end;continue;else Uz=EO[vz];end;else vz=r[dz];end;end;end;break;end;end;end;end;else for Ad=1,da do(la)[Ad]={[1]=q(),[0X00007]=0.19057028841103252,[0x0005]=F(),[0X07]=q(),[0X02]=F(),[6]=q(),[4]=F(),[0X3]=l()};end;continue;end;end;end;local ia=pa[0X008];local Ra=(c()-89960);ba=1;while ba~=0X0002 do if ba==0 then do pa[15]=c();end;ba=0X002;else for ut=0,Ra-1 do ia[ut]=sh();end;ba=0X0000;end;end;(pa)[0X0004]=l();return pa;end;do Vh=3;end;else function Xh(JU,tU,kU)local xU,aU,MU,VU,dU=kU[1],kU[0X0004],kU[2],kU[0x03],kU[5];local AU=(kU[7]);local hU,PU=kU[9],(kU[0X008]);local BU=S({},{__mode="v"});local wU=(nil);wU=function(...)local tl={};local al=(0X1);local Vl=(j());local pl,Tl=0,(Vl==Y and JU or Vl);local ml,wl=gh(...);ml=ml-0x00001;for WQ=0,ml do do if xU>WQ then do tl[WQ]=wl[WQ+0x1];end;else do break;end;end;end;end;do(th)[0X00001]=kU;end;th[2]=tl;if not VU then wl=nil;elseif not(dU)then else tl[xU]={n=ml>=xU and ml-xU+0X1 or 0,U(wl,xU+1,ml+0X1)};end;if Tl==Vl then else(C)(wU,Tl);end;while true do local Kn=(hU[al]);local Nn=Kn[0X3];al=al+1;if Nn<49 then if not(Nn<0x0018)then if Nn>=0X0024 then do if not(Nn>=0X002a)then if Nn<0X027 then if Nn<0X25 then do if tl[Kn[5]]==Kn[1]then al=Kn[0X02];end;end;else if Nn~=0x26 then if tl[Kn[5]]~=Kn[1]then do al=Kn[2];end;end;else(tl)[Kn[0X0002]]=tl[Kn[0x5]]%tl[Kn[4]];end;end;else if not(Nn>=0x28)then if Kn[0X4]~=0X00088 then repeat local bJ,wJ=BU,(tl);if#bJ>0 then local Zs={};for zO,nO in b,bJ do for UP,vP in b,nO do if vP[1]==wJ and vP[2]>=0X0 then local Q3=vP[0X2];if not(not Zs[Q3])then else(Zs)[Q3]={wJ[Q3]};end;do(vP)[0X001]=Zs[Q3];end;(vP)[2]=1;end;end;end;end;until true;local wL=(Kn[0x2]);return U(tl,wL,wL+Kn[5]-0X02);else al=al-1;do hU[al]={[0X3]=71,[5]=(Kn[5]-115),[0X002]=(Kn[2]-0X73)};end;end;else if Nn~=0X29 then local xM=(Kn[2]);local EM,WM=tl[xM],(tl[xM+0x1]);local DM=tl[xM+0X2];tl[xM]=K(function()for O7=EM,WM,DM do(R)(true,O7);end;end);al=Kn[5];else local Lk=(Kn[0X02]);local Mk=K(function(...)R();for t8,Q8,G8,i8,P8,S8,V8,W8,m8,R8 in...do(R)(true,{t8,Q8,G8,i8,P8,S8,V8,W8,m8,R8});end;end);(Mk)(tl[Lk],tl[Lk+0X01],tl[Lk+2]);do pl=Lk;end;do tl[Lk]=Mk;end;al=Kn[0X5];end;end;end;else if not(Nn>=0x2d)then if not(Nn>=0x2b)then al=Kn[0X5];else do if Nn~=0X2C then local Tq=(Kn[0X00002]);local kq,Cq=tl[Tq]();if kq then al=Kn[5];tl[Tq+3]=Cq;end;else if not(tl[Kn[0X5]]<=Kn[1])then do al=Kn[2];end;end;end;end;end;else do if Nn>=0X2F then if Nn==48 then if Kn[0X4]~=35 then if not tl[Kn[2]]then do al=Kn[0x5];end;end;else do al=al-0x0001;end;hU[al]={[3]=0X03a,[2]=(Kn[0x2]-115),[5]=(Kn[5]-115)};end;else local sv=Kn[0X02];do(tl)[sv]=tl[sv](U(tl,sv+0X0001,pl));end;pl=sv;end;else if Nn==46 then if Kn[4]~=59 then local M5=(ml-xU);local E5=Kn[0X2];do if M5<0 then M5=-1;end;end;do for yj=E5,E5+M5 do(tl)[yj]=wl[xU+(yj-E5)+1];end;end;pl=E5+M5;else al=al-1;hU[al]={[0X2]=(Kn[2]-0X61),[5]=(Kn[5]-97),[0x3]=71};end;else do tl[Kn[0X02]]=th[Kn[5]];end;end;end;end;end;end;end;else if not(Nn>=30)then do if Nn>=0x00001B then if Nn>=0x001c then if Nn==0X00001D then local hv=tU[Kn[5]];(hv[0x1])[hv[2]]=tl[Kn[0X2]];else(tl)[Kn[2]]=Tl[Kn[0X00006]];end;else(tl)[Kn[2]]=tl[Kn[0X5]]~=Kn[1];end;else do if Nn>=0x19 then if Nn~=0x1a then tl[Kn[0X002]]=tl[Kn[0X05]]*tl[Kn[4]];else if Kn[0X04]~=0X7D then(tl)[Kn[0X2]]=nil;else do al=al-0X1;end;(hU)[al]={[2]=(Kn[0X2]-212),[0X3]=0X27,[0x005]=(Kn[0X05]-0xD4)};end;end;else(tl)[Kn[2]]=tl[Kn[0X5]]%Kn[0X01];end;end;end;end;else if Nn<33 then if Nn>=31 then if Nn~=0x20 then(tl)[Kn[2]]=tl[Kn[5]]/tl[Kn[0X4]];else tl[Kn[2]]=tl[Kn[5]]==tl[Kn[0x4]];end;else(tl)[Kn[2]]=tl[Kn[5]]<Kn[0X1];end;else do if Nn>=34 then if Nn==35 then tl[Kn[0X00002]]=tl[Kn[5]]*Kn[0X1];else local Zx=(tl[Kn[5]]/tl[Kn[0X04]]);tl[Kn[0X2]]=Zx-Zx%1;end;else local BX=Kn[5];local lX=(tl[BX]);for JY=BX+0X1,Kn[4]do lX=lX..tl[JY];end;(tl)[Kn[0X2]]=lX;end;end;end;end;end;else do if Nn>=0XC then if not(Nn>=18)then do if Nn>=15 then if not(Nn<0X10)then if Nn~=17 then(tl)[Kn[2]]=k(tl[Kn[0X5]],tl[Kn[0X4]]);else(tl)[Kn[2]]=tl[Kn[5]]==Kn[1];end;else tl[Kn[0x02]]=Q(tl[Kn[0X5]],tl[Kn[0x4]]);end;else do if Nn>=0X0000D then do if Nn~=0X00e then(tl)[Kn[0X2]]=m(tl[Kn[0X005]],tl[Kn[4]]);else tl[Kn[2]]=tl[Kn[5]]>=Kn[1];end;end;else do if not(not(tl[Kn[0X5]]<tl[Kn[0x004]]))then else do al=Kn[0X2];end;end;end;end;end;end;end;else do if not(Nn<0X15)then do if not(Nn>=22)then(tl)[Kn[0x2]]=not tl[Kn[0X05]];else if Nn~=23 then(Tl)[Kn[0X6]]=tl[Kn[2]];else local Zk=(Kn[2]);local Mk=K(function(...)(R)();for NX in...do R(true,NX);end;end);(Mk)(tl[Zk],tl[Zk+1],tl[Zk+0X00002]);pl=Zk;do tl[Zk]=Mk;end;al=Kn[0X5];end;end;end;else do if not(Nn<19)then if Nn==0X014 then do(tl)[Kn[2]]=I(tl[Kn[0X00005]],tl[Kn[4]]);end;else tl[Kn[0x2]]=Kn[0X0006];end;else local Qv=Kn[0X2];pl=Qv+Kn[5]-0x00001;tl[Qv]=tl[Qv](U(tl,Qv+0X1,pl));pl=Qv;end;end;end;end;end;else if not(Nn<6)then do if not(Nn<9)then if not(Nn>=10)then do if tl[Kn[0X5]]<=tl[Kn[0X4]]then al=Kn[0x2];end;end;else if Nn~=11 then local RR=Kn[2];local kR=(Kn[4]-1)*50;local YR=tl[RR];for YG=1,Kn[5]do YR[kR+YG]=tl[RR+YG];end;else do pl=Kn[2];end;tl[pl]=tl[pl]();end;end;else if Nn<0X0007 then do tl[Kn[2]]=tl[Kn[0x5]]-tl[Kn[4]];end;else do if Nn~=0X8 then tl[Kn[0X2]]={};else(tl[Kn[2]])[tl[Kn[5]]]=Kn[1];end;end;end;end;end;else do if not(Nn>=3)then if not(Nn<1)then if Nn~=2 then repeat local qT,pT=BU,tl;do if not(#qT>0)then else local Y8=({});for xF,sF in b,qT do do for Tg,Eg in b,sF do if not(Eg[1]==pT and Eg[0x2]>=0x0)then else local i3=(Eg[0X0002]);if not(not Y8[i3])then else Y8[i3]={pT[i3]};end;(Eg)[1]=Y8[i3];(Eg)[0X00002]=1;end;end;end;end;end;end;until true;return;else tl[Kn[2]]=tl[Kn[0x5]]~=tl[Kn[0X4]];end;else do for Aw=Kn[0x2],Kn[5]do tl[Aw]=nil;end;end;end;else if Nn>=0X4 then do if Nn==0X5 then if tl[Kn[5]]<tl[Kn[4]]then al=Kn[0X002];end;else local RT=Kn[0X5];(tl)[Kn[0X2]]=tl[RT]..tl[RT+1];end;end;else tl[Kn[0X002]][Kn[0X0006]]=Kn[1];end;end;end;end;end;end;end;else if Nn>=74 then if Nn<0X56 then if Nn>=80 then if Nn<83 then do if not(Nn<81)then if Nn~=0x00052 then pl=Kn[0X2];tl[pl]();pl=pl-1;else local rl,sl=Kn[0X2],Kn[0X5];pl=rl+sl-1;do repeat local cL,nL=BU,(tl);if#cL>0 then local ft={};for u5,S5 in b,cL do for uV,XV in b,S5 do if XV[1]==nL and XV[2]>=0 then local zu=(XV[2]);do if not(not ft[zu])then else(ft)[zu]={nL[zu]};end;end;(XV)[1]=ft[zu];XV[0x00002]=0X1;end;end;end;end;until true;end;return tl[rl](U(tl,rl+0X00001,pl));end;else local N7=PU[Kn[0x5]];local F7,v7=N7[0x6],(nil);local p7=#F7;do if not(p7>0X0)then else v7={};for dd=1,p7 do local Od=(F7[dd]);if Od[0X1]==0 then do(v7)[dd-0X1]={tl,Od[2]};end;else(v7)[dd-1]=tU[Od[2]];end;end;h(BU,v7);end;end;do(tl)[Kn[2]]=Xh(Tl,v7,N7);end;end;end;else if Nn>=0X54 then do if Nn~=0x000055 then tl[Kn[0X00002]]=tl[Kn[5]]^tl[Kn[4]];else tl[Kn[0X2]]=true;end;end;else do if not(not(Kn[6]<tl[Kn[0x00004]]))then else do al=Kn[0X02];end;end;end;end;end;else do if Nn>=0X4d then if Nn<78 then repeat local d7,V7=BU,tl;if#d7>0 then local vX={};for Qq,Mq in b,d7 do for RL,FL in b,Mq do do if FL[1]==V7 and FL[0X2]>=0 then local qC=(FL[2]);do if not vX[qC]then vX[qC]={V7[qC]};end;end;do FL[1]=vX[qC];end;do FL[0X2]=0x1;end;end;end;end;end;end;until true;local Dw=Kn[0X2];return tl[Dw](tl[Dw+0X1]);else if Nn~=79 then local ic=Kn[2];local dc,Lc,Yc=tl[ic]();if dc then(tl)[ic+0X1]=Lc;(tl)[ic+2]=Yc;al=Kn[0X5];end;else if Kn[0X004]==0X52 then al=al-1;hU[al]={[2]=(Kn[0X2]-80),[0x0003]=0X1,[5]=(Kn[0X5]-80)};else do repeat local LS,jS,ES=BU,tl,(Kn[2]);do if#LS>0 then local WS={};for e8,I8 in b,LS do for L6,x6 in b,I8 do if x6[0X1]==jS and x6[2]>=ES then local wx=x6[2];do if not(not WS[wx])then else(WS)[wx]={jS[wx]};end;end;x6[1]=WS[wx];x6[0X2]=0X1;end;end;end;end;end;until true;end;end;end;end;else if not(Nn<0X4B)then if Nn==0X4C then if Kn[0x4]~=0X0000a7 then repeat local aF,YF=BU,(tl);if#aF>0 then local ZA=({});for Tp,Pp in b,aF do for eL,LL in b,Pp do if LL[1]==YF and LL[0X002]>=0 then local PI=LL[0x02];if not(not ZA[PI])then else do(ZA)[PI]={YF[PI]};end;end;do(LL)[1]=ZA[PI];end;LL[0X2]=1;end;end;end;end;until true;return tl[Kn[0x2]];else do al=al-1;end;hU[al]={[0X2]=(Kn[2]-187),[3]=53,[5]=(Kn[5]-0x0bB)};end;else(tl)[Kn[0X2]]=tl[Kn[0X5]]>=tl[Kn[4]];end;else repeat local TU,CU=BU,tl;if#TU>0 then local Sz={};do for jg,Kg in b,TU do for Yo,Ro in b,Kg do if not(Ro[0x1]==CU and Ro[2]>=0X0)then else local c4=(Ro[2]);if not Sz[c4]then Sz[c4]={CU[c4]};end;(Ro)[0X00001]=Sz[c4];Ro[2]=0X1;end;end;end;end;end;until true;local SL=Kn[0X002];return tl[SL](U(tl,SL+1,pl));end;end;end;end;else if Nn<92 then if not(Nn>=0X00059)then if Nn<87 then(tl)[Kn[0X2]]=tl[Kn[5]][tl[Kn[4]]];else if Nn~=88 then tl[Kn[2]]=tl[Kn[0X5]]<=tl[Kn[0x4]];else do repeat local Nj,jj=BU,tl;if#Nj>0 then local bB=({});for aa,ia in b,Nj do do for cl,Ul in b,ia do do if Ul[1]==jj and Ul[2]>=0 then local hC=(Ul[0X2]);if not(not bB[hC])then else(bB)[hC]={jj[hC]};end;(Ul)[0x1]=bB[hC];(Ul)[0X0002]=1;end;end;end;end;end;end;until true;end;return tl[Kn[2]]();end;end;else if not(Nn<0X5a)then if Nn~=91 then do(tl[Kn[0X2]])[Kn[6]]=tl[Kn[4]];end;else tl[Kn[0X2]][tl[Kn[0X5]]]=tl[Kn[0x4]];end;else tl[Kn[2]]=tl[Kn[0X5]]>tl[Kn[0X00004]];end;end;else if Nn<0X00005F then do if not(Nn<93)then if Nn~=94 then tl[Kn[0X2]]=tl[Kn[5]]+tl[Kn[4]];else tl[Kn[2]]=i(tl[Kn[5]]);end;else tl[Kn[2]]={U({},1,Kn[5])};end;end;else if Nn>=97 then if Nn==98 then if tl[Kn[0X005]]==tl[Kn[4]]then al=Kn[2];end;else if tl[Kn[0X00002]]then al=Kn[5];end;end;else if Nn~=96 then local xW=Kn[2];local fW,cW=tl[xW]();if not(fW)then else tl[xW+0X1]=cW;al=Kn[0X5];end;else local Rk=Kn[2];local Tk=(K(function(...)R();for vc,Cc in...do R(true,vc,Cc);end;end));Tk(tl[Rk],tl[Rk+0X1],tl[Rk+0X2]);pl=Rk;(tl)[Rk]=Tk;al=Kn[0x5];end;end;end;end;end;else do if Nn>=61 then if not(Nn<0X43)then do if not(Nn<70)then do if Nn>=0X000048 then if Nn==73 then(th)[Kn[0X5]]=tl[Kn[0X002]];else local tW,nW=Kn[0X2],(tl[Kn[0x5]]);tl[tW+1]=nW;do tl[tW]=nW[Kn[0X01]];end;end;else if Nn==71 then repeat local rX,iX=BU,tl;if not(#rX>0X0)then else local lW=({});do for cx,bx in b,rX do for Ut,At in b,bx do if At[1]==iX and At[2]>=0X0 then local UA=At[2];if not(not lW[UA])then else lW[UA]={iX[UA]};end;(At)[0x0001]=lW[UA];do(At)[0X00002]=1;end;end;end;end;end;end;until true;return U(tl,Kn[0X2],pl);else do tl[Kn[2]]=Kn[6];end;end;end;end;else do if Nn>=0x44 then if Nn~=0X45 then local pi=(tU[Kn[0X5]]);tl[Kn[2]]=pi[1][pi[2]];else if tl[Kn[0X5]]~=tl[Kn[0X4]]then al=Kn[0X00002];end;end;else tl[Kn[2]]=tl[Kn[0X5]]<tl[Kn[4]];end;end;end;end;else do if not(Nn<0X40)then if not(Nn<0X41)then if Nn==0X00042 then tl[Kn[0X2]]=tl[Kn[5]];else local wO=Kn[0X002];local FO,GO=tl[wO]();if not(FO)then else for xY=0X1,Kn[4]do do(tl)[wO+xY]=GO[xY];end;end;al=Kn[5];end;end;else(tl)[Kn[2]]=tl[Kn[0X5]]/Kn[0X1];end;else if Nn<62 then local Fd=Kn[2];for aD=Fd,Fd+(Kn[5]-0X00001)do tl[aD]=wl[xU+(aD-Fd)+1];end;else if Nn==63 then tl[Kn[2]]=false;else local Bv,Tv=Kn[5],(Kn[4]);local uv=Kn[0X2];if Bv==0X00 then else pl=uv+Bv-1;end;local hv,tv=nil,(nil);do if Bv==1 then hv,tv=gh(tl[uv]());else hv,tv=gh(tl[uv](U(tl,uv+1,pl)));end;end;do if Tv~=0X1 then if Tv~=0X000 then hv=uv+Tv-2;pl=hv+1;else hv=hv+uv-1;pl=hv;end;local xp=(0X00000);for XE=uv,hv do do xp=xp+1;end;tl[XE]=tv[xp];end;else pl=uv-0X00001;end;end;end;end;end;end;end;else if Nn<0X037 then if Nn<52 then do if not(Nn>=0X00032)then local t1=Kn[2];tl[t1](tl[t1+1],tl[t1+2]);pl=t1-0X1;else if Nn==51 then local EK=(Kn[0X2]);tl[EK](U(tl,EK+1,pl));pl=EK-1;else(tl)[Kn[2]]=tl[Kn[5]][Kn[1]];end;end;end;else if Nn<53 then(tl)[Kn[0X2]]=Z(tl[Kn[0X0005]],tl[Kn[4]]);else if Nn~=54 then if Kn[4]~=172 then tl[Kn[0X02]]=#tl[Kn[5]];else al=al-1;hU[al]={[0X0005]=(Kn[0X5]-212),[0x03]=39,[2]=(Kn[0X00002]-0XD4)};end;else local uy=(Kn[0X2]);do(tl)[uy]=tl[uy](tl[uy+1],tl[uy+2]);end;pl=uy;end;end;end;else if not(Nn>=0x0003a)then do if Nn<0X38 then if not(tl[Kn[5]]<=tl[Kn[4]])then al=Kn[2];end;else if Nn~=57 then local kl=(Kn[0x00002]);local Ll=(Kn[0X4]-0X1)*0X32;local Pl=(tl[kl]);for PZ=0X0001,pl-kl do do(Pl)[Ll+PZ]=tl[kl+PZ];end;end;else local ft=Kn[0X02];(tl[ft])(tl[ft+0X1]);do pl=ft-0X0001;end;end;end;end;else if not(Nn>=0X0003B)then if Kn[4]==0XC9 then al=al-0X0001;hU[al]={[3]=21,[0X005]=(Kn[5]-0x9e),[0X002]=(Kn[2]-158)};else do tl[Kn[2]]=-tl[Kn[0X5]];end;end;else if Nn~=60 then local LG=Kn[0X0002];(tl)[LG]=tl[LG](tl[LG+0X1]);pl=LG;else local lQ=(Kn[0X2]);pl=lQ+Kn[5]-1;tl[lQ](U(tl,lQ+0X01,pl));do pl=lQ-1;end;end;end;end;end;end;end;end;end;end;end;C(wU,JU);return wU;end;Vh=0X0;end;end;until Vh==0X0005;local P=type;local vh=sh();Vh=0;while 0.7203699881393942 do if Vh<=0X00000 then do th[4]=Nh;end;Vh=2;do continue;end;else if Vh~=1 then Nh=nil;Vh=0X1;do continue;end;else return Xh(Y,nil,vh)(...);end;end;end;end)(5,bit32,coroutine,0x00100,tonumber,unpack,0X0002,6,bit32.rshift,0x03,bit32.bor,"#",tostring,1,nil,string.sub,string.byte,rawset,18,203,next,string,bit32.lshift,bit32.bnot,...);