-- This file was generated using Luraph Obfuscator v13.5.4

return(function(gr,Yr,cr,Er,er,Gr,Or,nr,Kr,br,ur,Ir,Tr,sr,rr,Fr,Hr,qr,fr,lr,Qr,Dr,Zr,mr,Pr,Ur,Wr,wr,Xr,ir,Sr,Cr,ar,kr,dr,xr,Ar,zr,jr,...)local hr,R,q=1,nil,(nil);repeat if hr==0X0 then q=Yr;do hr=2;end;else R=sr;do hr=0;end;end;until hr==0x2;local N=(pcall);hr=0X0004;local L,y,s,G,O,e,u=nil,nil,nil,nil,nil,nil,(nil);do while hr~=7 do if not(hr<=2)then do if not(hr<=4)then do if hr==0X5 then y=string.sub;hr=0X1;else u=jr;hr=7;end;end;else if hr~=3 then L=Gr;hr=0X00005;else e=er.insert;hr=0X6;continue;end;end;end;elseif not(hr<=0)then do if hr==0X1 then s=string.char;hr=0X0000;continue;else do O=0X1;end;hr=3;end;end;else do G=Ir;end;hr=0X00002;continue;end;end;end;local M=ir.byte;local Y=(Sr);local w,W=getfenv,(2147483648);local j,T,i=nil,nil,nil;local f,H=ur.yield,ir.unpack;local S=next;for UR=0X0000,0X2 do if not(UR<=0X0)then if UR==0X1 then T=fr;continue;else do i=nr;end;continue;end;else do j=xr;end;do continue;end;end;end;local U=w();hr=0x0002;local X,B,Lr=nil,nil,(nil);while hr~=0X00003 do do if not(hr<=0)then if hr==1 then do B=Hr;end;hr=0;continue;elsehr=0X1;end;else do Lr={};end;do hr=3;end;continue;end;end;end;local A,J=nil,(error);do X=G(y(X,Cr),wr,function(cP)do if M(cP,0X02)~=0X00048 then local dO,ZO=0,nil;do while 0.059938889938437656 do if dO~=0X0 then if A then local a9,p9=1,(nil);repeat if not(a9<=0x0)then if a9==1 then p9=Y(ZO,A);a9=0X2;else A=Ur;do a9=0X0;end;end;else return p9;end;until false;else return ZO;end;break;else ZO=s(B(cP,16));do dO=0X01;end;do continue;end;end;end;end;else for bZ=0,0X0001 do if bZ~=0 then return"";else A=B(y(cP,0X0001,0X1));continue;end;end;end;end;end);end;local E=function()local TK=nil;local EK=0x0;repeat if EK==0X0000 then TK=M(X,O,O);EK=1;else O=O+0X1;do EK=2;end;end;until EK>1;do return TK;end;end;local b,I=nil,nil;do for G8=0X000,1 do if G8==0x00 then b={[0]=0X0001};do continue;end;else do I=Or;end;continue;end;end;end;local c,V=4294967296,(assert);hr=0X2;local Q,x,r=nil,nil,nil;do while hr<3 do if not(hr<=0x00000)then do if hr==0x1 then r={[0X0007]="\099\107",[0X0006]=Ar,[0X5]=6,[0x00006]=true,[0X3]=Er,[0x7]='p\053x',[0X00001]=0.3492019352823402,[6]=0.2389087549349187,[1]=dr,[0X6]=Wr,[0X3]=0X00004,[6]=Cr,[2]="+\s\098\d\d",[1]=cr,[Xr]=1,[cr]=0X07,[7]=1};hr=0x0003;continue;else Q=c-Xr;do hr=0x0;end;continue;end;end;else x=ur.wrap;do hr=0X1;end;continue;end;end;end;do local jB,CB=1,nil;while jB~=0X2 do if jB~=0 then CB=cr;do jB=0X0;end;else for HK=0X00001,0X1F do local DK=0;while DK<=1 do if DK~=0X000 then CB=CB*0X02;DK=0X2;else(b)[HK]=CB;DK=1;end;end;end;do jB=0x2;end;end;end;end;do hr=2;end;local d,K,F,P,z,l,D,g,Z,m,a=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);do while 0.5355927234601997 do if not(hr<=0X4)then if not(hr<=0X00007)then if hr<=0X008 then P=mr;do hr=0x000a;end;continue;elseif hr==0x0009 then l=0X2^52;do hr=6;end;else z=bit32.bor;do hr=0X00009;end;continue;end;else do if hr<=5 then m=W-Xr;hr=4;else if hr~=0x6 then g=function(GW,BW,oW)local vW=((GW/b[BW])%b[oW]);vW=vW-vW%1;return vW;end;hr=0;else D=function()local w7,B7=nil,nil;for GH=0x0,0X0002 do if not(GH<=0X00)then if GH==1 then O=B7;else do return w7;end;end;else w7,B7=H("<d",X,O);continue;end;end;end;hr=0X7;end;end;end;end;else do if hr<=0X001 then if hr~=0x0000 then do F=Qr;end;hr=8;continue;else Z={0X005,3,2};hr=5;end;else if not(hr<=2)then if hr~=3 then do a=function()local ji,ai=0X0,0X00;while true do local OG=M(X,O,O);O=O+1;ji=z(ji,P(T(OG,127),ai));if T(OG,128)~=0 then else return ji;end;do ai=ai+7;end;end;end;end;break;else K=function()local qb,Rb,xb=1,nil,(nil);do while(true)do do if qb<=0 then O=xb;qb=0X002;do continue;end;else if qb==0X1 then Rb,xb=H('\<\105\056',X,O);qb=0;else do return Rb;end;end;end;end;end;end;end;hr=0X1;end;else d=function()local UI,LI=nil,nil;for FP=0,0X0002 do do if not(FP<=0)then if FP==0x00001 then do O=LI;end;do continue;end;else do return UI;end;end;else do UI,LI=H(lr,X,O);end;do continue;end;end;end;end;end;hr=3;continue;end;end;end;end;end;end;do hr=5;end;local t,p,o,Nr,Vr,Br,v,vr=nil,nil,nil,nil,nil,nil,nil,(nil);while hr<=7 do if hr<=3 then do if not(hr<=0X01)then if hr~=0X2 then p=E();hr=1;continue;else do Br=function(...)return R("\035",...),{...};end;end;do hr=0x7;end;end;else do if hr==0 then Vr=function(yE)local OE,nE,xE,CE=2,nil,nil,(nil);repeat if not(OE<=0X0)then if OE~=1 then do nE={M(X,O,O+3)};end;do OE=0;end;else do CE=F(nE[0X00002],p);end;OE=0X03;continue;end;else xE=F(nE[0x1],p);OE=0X00001;continue;end;until OE==3;local fE=F(nE[3],p);local dE=F(nE[4],p);p=(0X0009*p+yE)%0X0000100;do O=O+gr;end;return dE*Kr+fE*65536+CE*0X100+xE;end;hr=0X2;continue;else o=br;do hr=0X4;end;end;end;end;end;elseif not(hr<=5)then do if hr~=6 then v=Dr;do hr=6;end;continue;else vr=1;hr=8;end;end;else if hr==0x0004 then do Nr={};end;hr=0;else do t=E();end;do hr=0x3;end;end;end;end;local C=setfenv;hr=0X00;local k,Rr,h,Jr,yr,Mr=nil,nil,nil,nil,nil,nil;do while hr<=6 do if not(hr<=2)then if not(hr<=0X0004)then if hr==5 then function yr()local lv=nil;for R1=0,1 do if R1~=0 then lv={};else continue;end;end;local Lv,Nv,Ov,Kv,zv={},4,nil,nil,nil;local tv=({});while Nv~=0X6 do if Nv<=2 then if Nv<=0 then for oS=1,a()do do(Lv)[oS]={E(),a()};end;end;do Nv=0X1;end;do continue;end;else do if Nv~=1 then Kv=d()-zr;Nv=5;continue;else do(Ov)[2]=a();end;do Nv=0X02;end;continue;end;end;end;else if not(Nv<=0x3)then if Nv~=0x4 then zv=Ov[gr];Nv=6;continue;else Ov={Ur,nil,Ur,{},nil,Ur,{},Ur,{}};Nv=0X3;end;else Ov[0X0008]=Lv;do Nv=0x0;end;do continue;end;end;end;end;Nv=1;local gv=(nil);while Nv<=1 do if Nv~=0X0 then do gv=0X1;end;Nv=0;continue;else for Nx=0X1,Kv do zv[Nx]={[0x1]=0.01564772310194007,[0X005]=h(),[cr]=qr,[7]=E(),[0X4]=0X20d06f95,[1]="\086\C\049\060<\?0",[2]=h(),[4]=E(),[0X0001]=a(),[3]=h(),[Pr]=E()};end;Nv=0X2;end;end;Nv=1;local Xv=(nil);while Nv~=0X00004 do do if not(Nv<=0X1)then if Nv~=0x2 then Ov[14]=d();Nv=4;do continue;end;else do(Ov)[0X01]=g(Xv,0X2,1)~=0X0000;end;Nv=3;end;else if Nv~=0X0000 then Xv=E();do Nv=0x000;end;else(Ov)[0X6]=g(Xv,1,0X1)~=Wr;Nv=2;end;end;end;end;Nv=0X1;while Nv<=1 do if Nv==0x0 then(Ov)[16]=E();Nv=2;continue;else do Ov[0X11]=E();end;Nv=0x00;continue;end;end;local qv=Ov[7];Nv=0X4;local kv,Iv,Vv,bv=nil,nil,nil,nil;while(true)do if Nv<=0X4 then if not(Nv<=1)then if Nv<=2 then for DW=1,Kv do local HW=(1);local aW=(nil);repeat if HW~=0X0 then aW=Ov[0X4][DW];HW=0;continue;else for BP,LP in rr(Z)do local MP,aP,GP=0,nil,(nil);while(true)do if MP<=0 then do aP=r[LP];end;MP=1;else if MP~=1 then if GP==10 then local I2,z2,u2=0X2,nil,(nil);while I2<3 do if not(I2<=0X0)then do if I2==0x00001 then if u2 then local Mi=(nil);local Ni=0X00001;repeat if Ni<=0 then Mi=u2[2];Ni=0X2;else if Ni~=1 then(Mi)[#Mi+1]={aW,aP};Ni=0X3;else aW[aP]=u2[0X1];do Ni=0X00000;end;end;end;until Ni>=0X3;end;I2=0X3;continue;else z2=lv[aW[LP]];I2=0;end;end;else u2=tv[z2];do I2=1;end;continue;end;end;elseif GP==0X0001 then(aW)[LP]=DW+aW[LP]+Xr;end;break;else GP=aW[aP];do MP=0X2;end;end;end;end;end;do break;end;end;until(false);end;do Nv=0x06;end;continue;else if Nv==3 then for sj=0x1,Iv do local hj=(0X0003);local Zj,rj=nil,(nil);while hj~=4 do if not(hj<=1)then if hj~=0X0002 then do Zj=E();end;do hj=0X0;end;continue;else lv[sj-0X00001]=gv;do hj=1;end;continue;end;else if hj==0X0 then do rj=nil;end;hj=0X2;else if Zj==0X027 then rj=y(Rr(Vv),d());elseif Zj==147 then do rj=y(Rr(Vv),2);end;elseif Zj==0X21 then rj=y(Rr(Vv),gr);elseif Zj==0X82 then do rj=true;end;elseif Zj==205 then rj=D()+d();elseif Zj==0X6c then rj=K();elseif Zj==4 then rj=D();elseif Zj==107 then rj=D()+d();elseif Zj==0Xcd then do rj=y(Rr(Vv),gr);end;elseif Zj==0X0000F9 then rj=kr;elseif Zj==Zr then rj=K();elseif Zj==93 then do rj=y(Rr(Vv),gr);end;end;hj=4;continue;end;end;end;local Vj={rj,{}};hj=0X001;do repeat if hj~=0 then(tv)[gv]=Vj;hj=0X0;continue;else gv=gv+1;hj=2;end;until hj==0X2;end;if bv then(Nr)[vr]=Vj;vr=vr+1;end;end;Nv=2;continue;else do kv=d()-0xf893;end;Nv=9;do continue;end;end;end;else do if Nv~=0 then bv=E()~=0;Nv=3;continue;else(Ov)[5]=a();Nv=0X5;continue;end;end;end;else if not(Nv<=6)then do if not(Nv<=7)then do if Nv~=0X8 then for CI=0,kv-Xr do(qv)[CI]=yr();end;Nv=0;do continue;end;else do Vv=E();end;Nv=0X00001;end;end;else return Ov;end;end;else if Nv==0X5 then Iv=d()-69698;Nv=8;continue;else(Ov)[ar]=a();do Nv=7;end;continue;end;end;end;end;end;hr=0X0004;do continue;end;else hr=0X00003;continue;end;else if hr~=0X3 then Mr=yr();hr=7;else do Rr=function(jx)local Bx=(2);local ix,ox=nil,(nil);do while(true)do if not(Bx<=0X01)then if not(Bx<=2)then if Bx~=0X3 then O=O+ix;Bx=0;else ox=Tr;Bx=0X0001;continue;end;else ix=d();Bx=3;do continue;end;end;else if Bx==0 then do return ox;end;else do for JV=0X01,ix,0X001F3D do local SV=0x2;local QV,MV=nil,nil;while(true)do if SV<=1 then if SV==0 then do MV={M(X,O+JV-0x1,O+QV-0x1)};end;SV=3;else ox=ox..s(o(MV));break;end;else if SV<=2 then QV=JV+7997-0X1;SV=4;else if SV~=0x3 then if not(QV>ix)then else QV=ix;end;SV=0;else for YI=0X1,#MV do MV[YI]=F(MV[YI],t);t=(jx*t+0X053)%0X100;end;SV=1;continue;end;end;end;end;end;end;Bx=4;continue;end;end;end;end;end;end;hr=1;do continue;end;end;end;else do if not(hr<=0X0)then if hr==0x0001 then h=function()local L8=a();if L8>m then return L8-c;end;do return L8;end;end;hr=0x00002;continue;else function Jr(vK,sK,TK)local YK,lK,wK=vK[0x0003],vK[0X00009],vK[0X6];local NK=(vK[7]);local MK=(vK[0X01]);local KK=vK[2];local VK=(vK[0X4]);local zK=(j({},{__mode='\118'}));local gK=nil;local AK=(vK[5]);gK=function(...)local a8=(1);local v8,n8={},0x0;local P8=w();local Y8,U8=Br(...);Y8=Y8-1;local z8=((P8==U and TK or P8));do for Nv=0,Y8 do if not(KK>Nv)then break;else v8[Nv]=U8[Nv+1];end;end;end;do(Lr)[0X2]=vK;end;(Lr)[0x3]=v8;if not wK then U8=nil;else if MK then v8[KK]={n=Y8>=KK and Y8-KK+1 or 0X0,o(U8,KK+1,Y8+1)};end;end;if z8==P8 then else(C)(gK,z8);end;repeat local us=(VK[a8]);local Ls=(us[0X01]);a8=a8+1;if Ls<0X00030 then do if Ls>=24 then if not(Ls<0X24)then if not(Ls>=0X002A)then if not(Ls<0X27)then if not(Ls<0X28)then if Ls~=41 then local GH=us[0X003];local BH,XH,TH=v8[GH]();if BH then do v8[GH+1]=XH;end;(v8)[GH+2]=TH;a8=us[0X00002];end;else n8=us[3];(v8[n8])();n8=n8-1;end;else if not(not(v8[us[0X0002]]<=us[6]))then else a8=us[3];end;end;else do if Ls>=37 then do if Ls==0x26 then local B0=(us[0X5]-1)*0X32;local K0=us[0x3];local m0=v8[K0];for tS=1,us[2]do m0[B0+tS]=v8[K0+tS];end;else local dn,Wn=us[0X3],Y8-KK;if not(Wn<0)then else Wn=-1;end;for R9=dn,dn+Wn do do(v8)[R9]=U8[KK+(R9-dn)+0X1];end;end;do n8=dn+Wn;end;end;end;else local IG=NK[us[2]];local oG=IG[8];local xG=(nil);local aG=(#oG);if not(aG>0X000)then else xG={};for D5=1,aG do local M5=(oG[D5]);if M5[0x1]==0X0 then xG[D5-0x1]={v8,M5[0X2]};else xG[D5-1]=sK[M5[0X2]];end;end;e(zK,xG);end;(v8)[us[0X3]]=Jr(IG,xG,z8);end;end;end;else do if not(Ls>=0X2D)then if not(Ls<43)then if Ls==0X0002C then v8[us[0X03]]=v8[us[2]]/v8[us[5]];else if not(not(us[0X00007]<v8[us[5]]))then else do a8=us[0X3];end;end;end;else local hx=(us[0X3]);local Rx,Yx=v8[hx]();if not(Rx)then else a8=us[2];(v8)[hx+3]=Yx;end;end;else if Ls<46 then v8[us[3]]=v8[us[2]]==us[6];else do if Ls==47 then if us[5]==0x2 then a8=a8-0X01;(VK)[a8]={[0X1]=0x05c,[3]=(us[3]-0X000013),[0X02]=(us[0x2]-19)};elseif us[0x0005]==202 then do a8=a8-1;end;do VK[a8]={[2]=(us[0X00002]-22),[0X001]=0X00025,[3]=(us[0X03]-0X16)};end;else do repeat local p7,g7=zK,(v8);if#p7>0X0 then local bo=({});for nG,AG in S,p7 do do for Lp,np in S,AG do if np[1]==g7 and np[0X0002]>=0X00000 then local xD=(np[0x002]);if not bo[xD]then do bo[xD]={g7[xD]};end;end;(np)[1]=bo[xD];np[2]=1;end;end;end;end;end;until true;end;return o(v8,us[3],n8);end;else(v8)[us[3]]=v8[us[2]]>v8[us[0X5]];end;end;end;end;end;end;else if Ls>=0x1E then if Ls<33 then if not(Ls<0x1f)then if Ls~=0x20 then local s2=(us[0x3]);local P2=us[2];n8=s2+P2-1;repeat local lO,BO=zK,v8;if not(#lO>0)then else local pP={};for A9,h9 in S,lO do do for Cc,dc in S,h9 do if not(dc[1]==BO and dc[2]>=0)then else local gP=(dc[2]);do if not pP[gP]then pP[gP]={BO[gP]};end;end;dc[0X0001]=pP[gP];dc[2]=0X1;end;end;end;end;end;until true;return v8[s2](o(v8,s2+0x001,n8));else if us[5]==185 then do a8=a8-1;end;VK[a8]={[1]=0X03,[0X2]=(us[2]-89),[3]=(us[0X3]-0X0059)};elseif us[0X5]==149 then a8=a8-1;VK[a8]={[0X003]=(us[3]-0x7c),[0x00001]=37,[0x002]=(us[2]-124)};else(v8)[us[0X00003]]=not v8[us[2]];end;end;else if us[0x5]~=0XDC then repeat local Qg,Ig=zK,(v8);if not(#Qg>0)then else local ig=({});for Gy,ky in S,Qg do for VA,hA in S,ky do if not(hA[1]==Ig and hA[0x2]>=0X000)then else local vd=(hA[2]);if not ig[vd]then do ig[vd]={Ig[vd]};end;end;(hA)[1]=ig[vd];(hA)[2]=0x00001;end;end;end;end;until true;local ao=us[3];do return o(v8,ao,ao+us[0X2]-0X00002);end;else a8=a8-0X1;VK[a8]={[0X00002]=(us[2]-0x0D6),[0x3]=(us[0X03]-0XD6),[1]=92};end;end;else if not(Ls<34)then do if Ls~=35 then local q4=(us[3]);local N4,M4=v8[q4]();do if N4 then for nQ=0x1,us[0x5]do v8[q4+nQ]=M4[nQ];end;a8=us[2];end;end;else do(v8)[us[0X3]]=nil;end;end;end;else local Rl=us[0X3];local xl=(x(function(...)f();for at in...do(f)(true,at);end;end));(xl)(v8[Rl],v8[Rl+1],v8[Rl+0X2]);n8=Rl;v8[Rl]=xl;a8=us[2];end;end;else if not(Ls<0X1b)then do if Ls>=0X1C then if Ls~=0x001D then do(v8)[us[0x03]]=v8[us[0X002]]~=us[0X06];end;else do(v8)[us[0x3]]=v8[us[0X0002]]^v8[us[5]];end;end;else local yt=us[0X0003];v8[yt](o(v8,yt+1,n8));n8=yt-0x1;end;end;else if not(Ls>=0X19)then if us[5]==109 then do a8=a8-1;end;do(VK)[a8]={[3]=(us[0X3]-0x0e3),[1]=92,[0X02]=(us[0X02]-227)};end;else if not(v8[us[0X3]])then else a8=us[2];end;end;else do if Ls==0X1a then(v8)[us[0x03]]=v8[us[0X2]]>=v8[us[5]];else for NZ=us[3],us[0X0002]do v8[NZ]=nil;end;end;end;end;end;end;end;else do if not(Ls>=12)then if not(Ls>=6)then do if Ls>=3 then if Ls>=4 then do if Ls~=0X05 then do if us[0x5]==48 then a8=a8-1;VK[a8]={[0X2]=(us[2]-22),[1]=35,[0X3]=(us[3]-0x0016)};elseif us[5]==0X0000aB then a8=a8-0X1;(VK)[a8]={[0X1]=0X00005c,[2]=(us[2]-110),[3]=(us[0X3]-110)};elseif us[0X5]==0xAf then a8=a8-0X1;(VK)[a8]={[3]=(us[0X3]-26),[0X0002]=(us[2]-0x1a),[1]=0x00016};elseif us[0X5]==23 then a8=a8-0x0001;VK[a8]={[0X00003]=(us[0X0003]-0XB1),[1]=32,[0X02]=(us[0X0002]-177)};else local u5=(us[0X0003]);for sS=u5,u5+(us[0X2]-0X01)do do v8[sS]=U8[KK+(sS-u5)+0X0001];end;end;end;end;else local WK=(us[3]);local bK=v8[us[0X2]];v8[WK+0X1]=bK;do(v8)[WK]=bK[us[0x6]];end;end;end;else if us[0X0005]==212 then do a8=a8-0X00001;end;(VK)[a8]={[3]=(us[0X00003]-92),[2]=(us[2]-0X5c),[0X1]=83};else repeat local Lf,ef=zK,v8;if#Lf>0X0 then local hs={};do for y9,v9 in S,Lf do for fa,Ca in S,v9 do if Ca[1]==ef and Ca[2]>=0X0000 then local bu=(Ca[0X2]);if not hs[bu]then(hs)[bu]={ef[bu]};end;Ca[1]=hs[bu];Ca[2]=1;end;end;end;end;end;until true;do return;end;end;end;else do if Ls<1 then(v8)[us[3]]=v8[us[2]]+v8[us[5]];else if Ls==0X00002 then local Pp=(sK[us[0X2]]);do(v8)[us[0X3]]=Pp[1][Pp[2]];end;else(v8)[us[3]]={};end;end;end;end;end;else do if Ls<0x09 then if Ls>=0X0007 then if Ls~=8 then repeat local pF,aF=zK,v8;if not(#pF>0)then else local VB=({});do for qs,Ns in S,pF do for hN,qN in S,Ns do if qN[0X01]==aF and qN[0X2]>=0x0 then local ub=qN[0X02];if not(not VB[ub])then else VB[ub]={aF[ub]};end;(qN)[1]=VB[ub];do qN[2]=0X1;end;end;end;end;end;end;until true;local jo=(us[0X3]);return v8[jo](o(v8,jo+0X001,n8));else(v8)[us[3]]=v8[us[0X002]]%v8[us[0x5]];end;else if v8[us[0X2]]~=v8[us[0X5]]then else a8=us[3];end;end;else do if Ls>=0xa then if Ls~=11 then local Ja=(sK[us[2]]);Ja[0x00001][Ja[0X2]]=v8[us[3]];else do if v8[us[2]]~=v8[us[0X05]]then a8=us[3];end;end;end;else if us[0X0005]==69 then a8=a8-1;do(VK)[a8]={[0x2]=(us[0X00002]-210),[0x00001]=83,[0X3]=(us[3]-0X00d2)};end;else(v8)[us[3]]=U8[KK+1];end;end;end;end;end;end;else if Ls>=0X12 then do if not(Ls>=21)then do if Ls>=0X13 then if Ls==20 then z8[us[0X7]]=v8[us[3]];else(v8)[us[3]]=false;end;else v8[us[3]]={o({},0X1,us[2])};end;end;else if not(Ls<22)then if Ls==0X17 then local pm=(us[0X00003]);v8[pm](v8[pm+1],v8[pm+0x02]);n8=pm-0X1;else if us[0X5]==0X0007f then a8=a8-1;(VK)[a8]={[0X3]=(us[0x00003]-0X77),[0x02]=(us[2]-119),[1]=0x01e};elseif us[5]~=228 then do v8[us[3]]=#v8[us[0X02]];end;else a8=a8-1;(VK)[a8]={[0X2]=(us[0x2]-69),[1]=37,[0x03]=(us[3]-0x45)};end;end;else local YP=(us[3]);local UP,BP=v8[YP],(us[0X05]-0X1)*0X32;for SR=1,n8-YP do(UP)[BP+SR]=v8[YP+SR];end;end;end;end;else if not(Ls<0x000f)then if not(Ls<0X10)then do if Ls~=0X11 then(v8)[us[0X3]]=F(v8[us[0X2]],v8[us[0x0005]]);else do a8=us[0x2];end;end;end;else do if not(v8[us[0X2]]<=v8[us[0X5]])then else a8=us[0X3];end;end;end;else do if not(Ls<0x0000D)then if Ls~=0X000e then local rf=v8[us[2]]/v8[us[5]];(v8)[us[0X3]]=rf-rf%1;else do(v8)[us[0X3]]=v8[us[2]]*us[0X06];end;end;else(v8)[us[0X3]]=v8[us[2]]*v8[us[0X5]];end;end;end;end;end;end;end;end;elseif not(Ls>=0X048)then if Ls<60 then do if not(Ls>=0X36)then if not(Ls<51)then if not(Ls<52)then if Ls~=53 then(v8)[us[3]]=v8[us[0X0002]]-v8[us[5]];else(v8)[us[0X3]]=true;end;else local oL,IL,VL=us[0X3],us[2],(us[5]);do if IL==0 then else n8=oL+IL-1;end;end;local HL,iL=nil,nil;if IL~=1 then HL,iL=Br(v8[oL](o(v8,oL+0x1,n8)));else do HL,iL=Br(v8[oL]());end;end;if VL==1 then do n8=oL-0x1;end;else if VL~=0X0 then HL=oL+VL-2;n8=HL+1;else HL=HL+oL-0X1;n8=HL;end;local RK=0X0;for Mj=oL,HL do RK=RK+1;do v8[Mj]=iL[RK];end;end;end;end;else do if Ls>=0x31 then if Ls~=0X32 then v8[us[0X3]]=v8[us[0x2]]~=v8[us[5]];else(v8)[us[3]]=v8[us[2]]>=us[6];end;else local EV=(us[0x00003]);local zV,LV=v8[EV+0x00001],(v8[EV+2]);local ZV=(v8[EV]);do v8[EV]=x(function()for Uh=ZV,zV,LV do f(true,Uh);end;end);end;a8=us[2];end;end;end;else do if Ls>=57 then if Ls<58 then(v8)[us[3]]=Lr[us[2]];else if Ls==59 then repeat local QV,yV=zK,v8;do if#QV>0X0 then local dW=({});for AM,IM in S,QV do for JK,dK in S,IM do if not(dK[1]==yV and dK[0X2]>=0)then else local LS=dK[0X2];do if not(not dW[LS])then else dW[LS]={yV[LS]};end;end;dK[0x1]=dW[LS];(dK)[2]=1;end;end;end;end;end;until true;local RJ=us[3];return v8[RJ](v8[RJ+1]);else v8[us[3]]=q(v8[us[0X2]]);end;end;else if not(Ls<0X037)then if Ls~=0X00038 then local N_=us[0X3];n8=N_+us[0X2]-1;(v8)[N_]=v8[N_](o(v8,N_+1,n8));n8=N_;else local DK=us[3];n8=DK+us[0X00002]-1;v8[DK](o(v8,DK+1,n8));do n8=DK-0X0001;end;end;else do v8[us[0X0003]]=v8[us[0X2]]<v8[us[5]];end;end;end;end;end;end;else if not(Ls>=66)then if Ls<63 then do if not(Ls>=0X00003D)then(v8)[us[3]]=P(v8[us[0X2]],v8[us[0X5]]);else if Ls~=0X0003E then do if not(not v8[us[0X3]])then else a8=us[2];end;end;else v8[us[0X3]]=z8[us[7]];end;end;end;else if Ls>=64 then if Ls~=0x41 then local Ti=us[3];local ci,Wi=v8[Ti]();if not(ci)then else do(v8)[Ti+1]=Wi;end;do a8=us[0X2];end;end;else local y2=(us[3]);v8[y2](v8[y2+0X00001]);n8=y2-1;end;else if us[5]==184 then do a8=a8-0X01;end;do VK[a8]={[2]=(us[0x0002]-0X004f),[1]=0X3,[0X3]=(us[3]-79)};end;else(v8)[us[3]]=-v8[us[0X2]];end;end;end;else do if Ls<0x45 then do if Ls<67 then do if us[5]==126 then a8=a8-0X01;do VK[a8]={[2]=(us[0X2]-0x3C),[3]=(us[0X3]-0X3c),[0x1]=47};end;elseif us[0X5]==54 then a8=a8-1;(VK)[a8]={[0X2]=(us[2]-55),[0x001]=22,[0X3]=(us[3]-0X000037)};else do repeat local pr,tr,Z4=zK,v8,(us[3]);if not(#pr>0x0000)then else local BG=({});for Kl,zl in S,pr do do for wN,YN in S,zl do if YN[1]==tr and YN[0X2]>=Z4 then local Kv=(YN[0X2]);do if not(not BG[Kv])then else(BG)[Kv]={tr[Kv]};end;end;YN[1]=BG[Kv];(YN)[2]=1;end;end;end;end;end;until true;end;end;end;else if Ls==68 then do(v8[us[3]])[v8[us[2]]]=us[0x00006];end;else local cm=us[3];local Nm=(x(function(...)(f)();do for F5,B5,X5,l5,a5,N5,Z5,S5,Y5,O5 in...do f(true,{F5,B5,X5,l5,a5,N5,Z5,S5,Y5,O5});end;end;end));(Nm)(v8[cm],v8[cm+0X1],v8[cm+0X002]);n8=cm;(v8)[cm]=Nm;a8=us[2];end;end;end;else do if Ls>=0X046 then if Ls~=0X47 then do v8[us[3]]=v8[us[0X2]]<us[0X006];end;else local q9=us[3];(v8)[q9]=v8[q9](v8[q9+1],v8[q9+2]);n8=q9;end;else if v8[us[2]]==us[6]then else a8=us[0X3];end;end;end;end;end;end;end;else if not(Ls<0X54)then if Ls>=90 then if not(Ls<93)then if not(Ls<95)then if Ls~=96 then local wC=(us[0X3]);local aC=x(function(...)f();do for xV,iV in...do f(true,xV,iV);end;end;end);aC(v8[wC],v8[wC+1],v8[wC+0X02]);n8=wC;v8[wC]=aC;a8=us[2];else local p1=(us[0x3]);do v8[p1]=v8[p1](v8[p1+1]);end;n8=p1;end;else do if Ls~=94 then v8[us[0X3]][us[7]]=us[6];else do if not(not(v8[us[2]]<=v8[us[5]]))then else a8=us[3];end;end;end;end;end;else if Ls<0x5B then do v8[us[3]]=v8[us[0x2]][us[0X6]];end;else do if Ls~=0X005c then v8[us[3]]=v8[us[0x02]]/us[6];else repeat local u3,g3=zK,v8;if not(#u3>0)then else local rx=({});do for YZ,aZ in S,u3 do for XO,qO in S,aZ do if qO[0X001]==g3 and qO[2]>=0 then local Rc=qO[0X2];if not rx[Rc]then rx[Rc]={g3[Rc]};end;do(qO)[1]=rx[Rc];end;qO[2]=0X1;end;end;end;end;end;until true;return v8[us[0X03]];end;end;end;end;else do if Ls>=87 then if Ls<0x0058 then do if v8[us[2]]~=us[6]then else a8=us[3];end;end;else if Ls==0X059 then(v8)[us[3]]=v8[us[2]]<=v8[us[5]];else n8=us[0X3];(v8)[n8]=v8[n8]();end;end;else if not(Ls>=85)then do if not(v8[us[2]]<v8[us[5]])then do a8=us[3];end;end;end;else if Ls==0X056 then(v8)[us[3]]=v8[us[0X2]][v8[us[0X00005]]];else do(v8)[us[0X003]]=k(v8[us[0x00002]],v8[us[0x0005]]);end;end;end;end;end;end;else if not(Ls>=0x4E)then if Ls>=75 then if not(Ls>=0X4c)then do repeat local WO,kO=zK,v8;if not(#WO>0X0)then else local IK=({});for Uu,uu in S,WO do do for N1,I1 in S,uu do do if I1[0X1]==kO and I1[0X02]>=0x00000 then local ap=I1[2];if not(not IK[ap])then else(IK)[ap]={kO[ap]};end;I1[1]=IK[ap];(I1)[0X2]=1;end;end;end;end;end;end;until true;end;return v8[us[3]]();else if Ls~=0X4d then local Mn=(us[2]);local rn=(v8[Mn]);for pr=Mn+0x1,us[0X005]do do rn=rn..v8[pr];end;end;(v8)[us[0x03]]=rn;else(v8)[us[3]]=v8[us[2]]%us[6];end;end;else do if not(Ls>=0X49)then local e8=(us[0X2]);v8[us[0X3]]=v8[e8]..v8[e8+0X01];else if Ls==0X4A then v8[us[0x3]][v8[us[2]]]=v8[us[5]];else(v8[us[3]])[us[0X7]]=v8[us[5]];end;end;end;end;else if Ls>=81 then if Ls<0x52 then do Lr[us[2]]=v8[us[3]];end;else do if Ls==83 then if us[5]~=195 then do v8[us[0X03]]=v8[us[0X2]];end;else a8=a8-1;VK[a8]={[2]=(us[2]-172),[0x00001]=35,[3]=(us[3]-0xAc)};end;else v8[us[3]]=z(v8[us[2]],v8[us[0x5]]);end;end;end;else if Ls>=79 then if Ls~=80 then v8[us[0X03]]=us[7];else local g9=us[0X3];v8[g9]=v8[g9](o(v8,g9+1,n8));do n8=g9;end;end;else(v8)[us[3]]=v8[us[0X2]]==v8[us[5]];end;end;end;end;end;until false;end;(C)(gK,TK);return gK;end;hr=5;end;else do k=Fr;end;do hr=6;end;end;end;end;end;end;do Lr[Xr]=Nr;end;Nr=Ur;return Jr(Mr,Ur,U)(...);end)(4,bit32.bnot,2,true,table,tostring,string.match,rawset,0x01000000,unpack,coroutine,string.gsub,"",select,ipairs,bit32.rshift,tonumber,-1241166646,bit32.band,"<I4",bit32.bxor,type,0X0D6,bit32.lshift,6,nil,0X000,"..",1,string,string.rep,5,0x0003,false,-1525015523,setmetatable,0.6402497105680709,0X12E0e,rawget,...);
=======
return(function(gr,Yr,cr,Er,er,Gr,Or,nr,Kr,br,ur,Ir,Tr,sr,rr,Fr,Hr,qr,fr,lr,Qr,Dr,Zr,mr,Pr,Ur,Wr,wr,Xr,ir,Sr,Cr,ar,kr,dr,xr,Ar,zr,jr,...)local hr,R,q=1,nil,(nil);repeat if hr==0X0 then q=Yr;do hr=2;end;else R=sr;do hr=0;end;end;until hr==0x2;local N=(pcall);hr=0X0004;local L,y,s,G,O,e,u=nil,nil,nil,nil,nil,nil,(nil);do while hr~=7 do if not(hr<=2)then do if not(hr<=4)then do if hr==0X5 then y=string.sub;hr=0X1;else u=jr;hr=7;end;end;else if hr~=3 then L=Gr;hr=0X00005;else e=er.insert;hr=0X6;continue;end;end;end;elseif not(hr<=0)then do if hr==0X1 then s=string.char;hr=0X0000;continue;else do O=0X1;end;hr=3;end;end;else do G=Ir;end;hr=0X00002;continue;end;end;end;local M=ir.byte;local Y=(Sr);local w,W=getfenv,(2147483648);local j,T,i=nil,nil,nil;local f,H=ur.yield,ir.unpack;local S=next;for UR=0X0000,0X2 do if not(UR<=0X0)then if UR==0X1 then T=fr;continue;else do i=nr;end;continue;end;else do j=xr;end;do continue;end;end;end;local U=w();hr=0x0002;local X,B,Lr=nil,nil,(nil);while hr~=0X00003 do do if not(hr<=0)then if hr==1 then do B=Hr;end;hr=0;continue;elsehr=0X1;end;else do Lr={};end;do hr=3;end;continue;end;end;end;local A,J=nil,(error);do X=G(y(X,Cr),wr,function(cP)do if M(cP,0X02)~=0X00048 then local dO,ZO=0,nil;do while 0.059938889938437656 do if dO~=0X0 then if A then local a9,p9=1,(nil);repeat if not(a9<=0x0)then if a9==1 then p9=Y(ZO,A);a9=0X2;else A=Ur;do a9=0X0;end;end;else return p9;end;until false;else return ZO;end;break;else ZO=s(B(cP,16));do dO=0X01;end;do continue;end;end;end;end;else for bZ=0,0X0001 do if bZ~=0 then return"";else A=B(y(cP,0X0001,0X1));continue;end;end;end;end;end);end;local E=function()local TK=nil;local EK=0x0;repeat if EK==0X0000 then TK=M(X,O,O);EK=1;else O=O+0X1;do EK=2;end;end;until EK>1;do return TK;end;end;local b,I=nil,nil;do for G8=0X000,1 do if G8==0x00 then b={[0]=0X0001};do continue;end;else do I=Or;end;continue;end;end;end;local c,V=4294967296,(assert);hr=0X2;local Q,x,r=nil,nil,nil;do while hr<3 do if not(hr<=0x00000)then do if hr==0x1 then r={[0X0007]="\099\107",[0X0006]=Ar,[0X5]=6,[0x00006]=true,[0X3]=Er,[0x7]='p\053x',[0X00001]=0.3492019352823402,[6]=0.2389087549349187,[1]=dr,[0X6]=Wr,[0X3]=0X00004,[6]=Cr,[2]="+\s\098\d\d",[1]=cr,[Xr]=1,[cr]=0X07,[7]=1};hr=0x0003;continue;else Q=c-Xr;do hr=0x0;end;continue;end;end;else x=ur.wrap;do hr=0X1;end;continue;end;end;end;do local jB,CB=1,nil;while jB~=0X2 do if jB~=0 then CB=cr;do jB=0X0;end;else for HK=0X00001,0X1F do local DK=0;while DK<=1 do if DK~=0X000 then CB=CB*0X02;DK=0X2;else(b)[HK]=CB;DK=1;end;end;end;do jB=0x2;end;end;end;end;do hr=2;end;local d,K,F,P,z,l,D,g,Z,m,a=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);do while 0.5355927234601997 do if not(hr<=0X4)then if not(hr<=0X00007)then if hr<=0X008 then P=mr;do hr=0x000a;end;continue;elseif hr==0x0009 then l=0X2^52;do hr=6;end;else z=bit32.bor;do hr=0X00009;end;continue;end;else do if hr<=5 then m=W-Xr;hr=4;else if hr~=0x6 then g=function(GW,BW,oW)local vW=((GW/b[BW])%b[oW]);vW=vW-vW%1;return vW;end;hr=0;else D=function()local w7,B7=nil,nil;for GH=0x0,0X0002 do if not(GH<=0X00)then if GH==1 then O=B7;else do return w7;end;end;else w7,B7=H("<d",X,O);continue;end;end;end;hr=0X7;end;end;end;end;else do if hr<=0X001 then if hr~=0x0000 then do F=Qr;end;hr=8;continue;else Z={0X005,3,2};hr=5;end;else if not(hr<=2)then if hr~=3 then do a=function()local ji,ai=0X0,0X00;while true do local OG=M(X,O,O);O=O+1;ji=z(ji,P(T(OG,127),ai));if T(OG,128)~=0 then else return ji;end;do ai=ai+7;end;end;end;end;break;else K=function()local qb,Rb,xb=1,nil,(nil);do while(true)do do if qb<=0 then O=xb;qb=0X002;do continue;end;else if qb==0X1 then Rb,xb=H('\<\105\056',X,O);qb=0;else do return Rb;end;end;end;end;end;end;end;hr=0X1;end;else d=function()local UI,LI=nil,nil;for FP=0,0X0002 do do if not(FP<=0)then if FP==0x00001 then do O=LI;end;do continue;end;else do return UI;end;end;else do UI,LI=H(lr,X,O);end;do continue;end;end;end;end;end;hr=3;continue;end;end;end;end;end;end;do hr=5;end;local t,p,o,Nr,Vr,Br,v,vr=nil,nil,nil,nil,nil,nil,nil,(nil);while hr<=7 do if hr<=3 then do if not(hr<=0X01)then if hr~=0X2 then p=E();hr=1;continue;else do Br=function(...)return R("\035",...),{...};end;end;do hr=0x7;end;end;else do if hr==0 then Vr=function(yE)local OE,nE,xE,CE=2,nil,nil,(nil);repeat if not(OE<=0X0)then if OE~=1 then do nE={M(X,O,O+3)};end;do OE=0;end;else do CE=F(nE[0X00002],p);end;OE=0X03;continue;end;else xE=F(nE[0x1],p);OE=0X00001;continue;end;until OE==3;local fE=F(nE[3],p);local dE=F(nE[4],p);p=(0X0009*p+yE)%0X0000100;do O=O+gr;end;return dE*Kr+fE*65536+CE*0X100+xE;end;hr=0X2;continue;else o=br;do hr=0X4;end;end;end;end;end;elseif not(hr<=5)then do if hr~=6 then v=Dr;do hr=6;end;continue;else vr=1;hr=8;end;end;else if hr==0x0004 then do Nr={};end;hr=0;else do t=E();end;do hr=0x3;end;end;end;end;local C=setfenv;hr=0X00;local k,Rr,h,Jr,yr,Mr=nil,nil,nil,nil,nil,nil;do while hr<=6 do if not(hr<=2)then if not(hr<=0X0004)then if hr==5 then function yr()local lv=nil;for R1=0,1 do if R1~=0 then lv={};else continue;end;end;local Lv,Nv,Ov,Kv,zv={},4,nil,nil,nil;local tv=({});while Nv~=0X6 do if Nv<=2 then if Nv<=0 then for oS=1,a()do do(Lv)[oS]={E(),a()};end;end;do Nv=0X1;end;do continue;end;else do if Nv~=1 then Kv=d()-zr;Nv=5;continue;else do(Ov)[2]=a();end;do Nv=0X02;end;continue;end;end;end;else if not(Nv<=0x3)then if Nv~=0x4 then zv=Ov[gr];Nv=6;continue;else Ov={Ur,nil,Ur,{},nil,Ur,{},Ur,{}};Nv=0X3;end;else Ov[0X0008]=Lv;do Nv=0x0;end;do continue;end;end;end;end;Nv=1;local gv=(nil);while Nv<=1 do if Nv~=0X0 then do gv=0X1;end;Nv=0;continue;else for Nx=0X1,Kv do zv[Nx]={[0x1]=0.01564772310194007,[0X005]=h(),[cr]=qr,[7]=E(),[0X4]=0X20d06f95,[1]="\086\C\049\060<\?0",[2]=h(),[4]=E(),[0X0001]=a(),[3]=h(),[Pr]=E()};end;Nv=0X2;end;end;Nv=1;local Xv=(nil);while Nv~=0X00004 do do if not(Nv<=0X1)then if Nv~=0x2 then Ov[14]=d();Nv=4;do continue;end;else do(Ov)[0X01]=g(Xv,0X2,1)~=0X0000;end;Nv=3;end;else if Nv~=0X0000 then Xv=E();do Nv=0x000;end;else(Ov)[0X6]=g(Xv,1,0X1)~=Wr;Nv=2;end;end;end;end;Nv=0X1;while Nv<=1 do if Nv==0x0 then(Ov)[16]=E();Nv=2;continue;else do Ov[0X11]=E();end;Nv=0x00;continue;end;end;local qv=Ov[7];Nv=0X4;local kv,Iv,Vv,bv=nil,nil,nil,nil;while(true)do if Nv<=0X4 then if not(Nv<=1)then if Nv<=2 then for DW=1,Kv do local HW=(1);local aW=(nil);repeat if HW~=0X0 then aW=Ov[0X4][DW];HW=0;continue;else for BP,LP in rr(Z)do local MP,aP,GP=0,nil,(nil);while(true)do if MP<=0 then do aP=r[LP];end;MP=1;else if MP~=1 then if GP==10 then local I2,z2,u2=0X2,nil,(nil);while I2<3 do if not(I2<=0X0)then do if I2==0x00001 then if u2 then local Mi=(nil);local Ni=0X00001;repeat if Ni<=0 then Mi=u2[2];Ni=0X2;else if Ni~=1 then(Mi)[#Mi+1]={aW,aP};Ni=0X3;else aW[aP]=u2[0X1];do Ni=0X00000;end;end;end;until Ni>=0X3;end;I2=0X3;continue;else z2=lv[aW[LP]];I2=0;end;end;else u2=tv[z2];do I2=1;end;continue;end;end;elseif GP==0X0001 then(aW)[LP]=DW+aW[LP]+Xr;end;break;else GP=aW[aP];do MP=0X2;end;end;end;end;end;do break;end;end;until(false);end;do Nv=0x06;end;continue;else if Nv==3 then for sj=0x1,Iv do local hj=(0X0003);local Zj,rj=nil,(nil);while hj~=4 do if not(hj<=1)then if hj~=0X0002 then do Zj=E();end;do hj=0X0;end;continue;else lv[sj-0X00001]=gv;do hj=1;end;continue;end;else if hj==0X0 then do rj=nil;end;hj=0X2;else if Zj==0X027 then rj=y(Rr(Vv),d());elseif Zj==147 then do rj=y(Rr(Vv),2);end;elseif Zj==0X21 then rj=y(Rr(Vv),gr);elseif Zj==0X82 then do rj=true;end;elseif Zj==205 then rj=D()+d();elseif Zj==0X6c then rj=K();elseif Zj==4 then rj=D();elseif Zj==107 then rj=D()+d();elseif Zj==0Xcd then do rj=y(Rr(Vv),gr);end;elseif Zj==0X0000F9 then rj=kr;elseif Zj==Zr then rj=K();elseif Zj==93 then do rj=y(Rr(Vv),gr);end;end;hj=4;continue;end;end;end;local Vj={rj,{}};hj=0X001;do repeat if hj~=0 then(tv)[gv]=Vj;hj=0X0;continue;else gv=gv+1;hj=2;end;until hj==0X2;end;if bv then(Nr)[vr]=Vj;vr=vr+1;end;end;Nv=2;continue;else do kv=d()-0xf893;end;Nv=9;do continue;end;end;end;else do if Nv~=0 then bv=E()~=0;Nv=3;continue;else(Ov)[5]=a();Nv=0X5;continue;end;end;end;else if not(Nv<=6)then do if not(Nv<=7)then do if Nv~=0X8 then for CI=0,kv-Xr do(qv)[CI]=yr();end;Nv=0;do continue;end;else do Vv=E();end;Nv=0X00001;end;end;else return Ov;end;end;else if Nv==0X5 then Iv=d()-69698;Nv=8;continue;else(Ov)[ar]=a();do Nv=7;end;continue;end;end;end;end;end;hr=0X0004;do continue;end;else hr=0X00003;continue;end;else if hr~=0X3 then Mr=yr();hr=7;else do Rr=function(jx)local Bx=(2);local ix,ox=nil,(nil);do while(true)do if not(Bx<=0X01)then if not(Bx<=2)then if Bx~=0X3 then O=O+ix;Bx=0;else ox=Tr;Bx=0X0001;continue;end;else ix=d();Bx=3;do continue;end;end;else if Bx==0 then do return ox;end;else do for JV=0X01,ix,0X001F3D do local SV=0x2;local QV,MV=nil,nil;while(true)do if SV<=1 then if SV==0 then do MV={M(X,O+JV-0x1,O+QV-0x1)};end;SV=3;else ox=ox..s(o(MV));break;end;else if SV<=2 then QV=JV+7997-0X1;SV=4;else if SV~=0x3 then if not(QV>ix)then else QV=ix;end;SV=0;else for YI=0X1,#MV do MV[YI]=F(MV[YI],t);t=(jx*t+0X053)%0X100;end;SV=1;continue;end;end;end;end;end;end;Bx=4;continue;end;end;end;end;end;end;hr=1;do continue;end;end;end;else do if not(hr<=0X0)then if hr==0x0001 then h=function()local L8=a();if L8>m then return L8-c;end;do return L8;end;end;hr=0x00002;continue;else function Jr(vK,sK,TK)local YK,lK,wK=vK[0x0003],vK[0X00009],vK[0X6];local NK=(vK[7]);local MK=(vK[0X01]);local KK=vK[2];local VK=(vK[0X4]);local zK=(j({},{__mode='\118'}));local gK=nil;local AK=(vK[5]);gK=function(...)local a8=(1);local v8,n8={},0x0;local P8=w();local Y8,U8=Br(...);Y8=Y8-1;local z8=((P8==U and TK or P8));do for Nv=0,Y8 do if not(KK>Nv)then break;else v8[Nv]=U8[Nv+1];end;end;end;do(Lr)[0X2]=vK;end;(Lr)[0x3]=v8;if not wK then U8=nil;else if MK then v8[KK]={n=Y8>=KK and Y8-KK+1 or 0X0,o(U8,KK+1,Y8+1)};end;end;if z8==P8 then else(C)(gK,z8);end;repeat local us=(VK[a8]);local Ls=(us[0X01]);a8=a8+1;if Ls<0X00030 then do if Ls>=24 then if not(Ls<0X24)then if not(Ls>=0X002A)then if not(Ls<0X27)then if not(Ls<0X28)then if Ls~=41 then local GH=us[0X003];local BH,XH,TH=v8[GH]();if BH then do v8[GH+1]=XH;end;(v8)[GH+2]=TH;a8=us[0X00002];end;else n8=us[3];(v8[n8])();n8=n8-1;end;else if not(not(v8[us[0X0002]]<=us[6]))then else a8=us[3];end;end;else do if Ls>=37 then do if Ls==0x26 then local B0=(us[0X5]-1)*0X32;local K0=us[0x3];local m0=v8[K0];for tS=1,us[2]do m0[B0+tS]=v8[K0+tS];end;else local dn,Wn=us[0X3],Y8-KK;if not(Wn<0)then else Wn=-1;end;for R9=dn,dn+Wn do do(v8)[R9]=U8[KK+(R9-dn)+0X1];end;end;do n8=dn+Wn;end;end;end;else local IG=NK[us[2]];local oG=IG[8];local xG=(nil);local aG=(#oG);if not(aG>0X000)then else xG={};for D5=1,aG do local M5=(oG[D5]);if M5[0x1]==0X0 then xG[D5-0x1]={v8,M5[0X2]};else xG[D5-1]=sK[M5[0X2]];end;end;e(zK,xG);end;(v8)[us[0X3]]=Jr(IG,xG,z8);end;end;end;else do if not(Ls>=0X2D)then if not(Ls<43)then if Ls==0X0002C then v8[us[0X03]]=v8[us[2]]/v8[us[5]];else if not(not(us[0X00007]<v8[us[5]]))then else do a8=us[0X3];end;end;end;else local hx=(us[0X3]);local Rx,Yx=v8[hx]();if not(Rx)then else a8=us[2];(v8)[hx+3]=Yx;end;end;else if Ls<46 then v8[us[3]]=v8[us[2]]==us[6];else do if Ls==47 then if us[5]==0x2 then a8=a8-0X01;(VK)[a8]={[0X1]=0x05c,[3]=(us[3]-0X000013),[0X02]=(us[0x2]-19)};elseif us[0x0005]==202 then do a8=a8-1;end;do VK[a8]={[2]=(us[0X00002]-22),[0X001]=0X00025,[3]=(us[0X03]-0X16)};end;else do repeat local p7,g7=zK,(v8);if#p7>0X0 then local bo=({});for nG,AG in S,p7 do do for Lp,np in S,AG do if np[1]==g7 and np[0X0002]>=0X00000 then local xD=(np[0x002]);if not bo[xD]then do bo[xD]={g7[xD]};end;end;(np)[1]=bo[xD];np[2]=1;end;end;end;end;end;until true;end;return o(v8,us[3],n8);end;else(v8)[us[3]]=v8[us[2]]>v8[us[0X5]];end;end;end;end;end;end;else if Ls>=0x1E then if Ls<33 then if not(Ls<0x1f)then if Ls~=0x20 then local s2=(us[0x3]);local P2=us[2];n8=s2+P2-1;repeat local lO,BO=zK,v8;if not(#lO>0)then else local pP={};for A9,h9 in S,lO do do for Cc,dc in S,h9 do if not(dc[1]==BO and dc[2]>=0)then else local gP=(dc[2]);do if not pP[gP]then pP[gP]={BO[gP]};end;end;dc[0X0001]=pP[gP];dc[2]=0X1;end;end;end;end;end;until true;return v8[s2](o(v8,s2+0x001,n8));else if us[5]==185 then do a8=a8-1;end;VK[a8]={[1]=0X03,[0X2]=(us[2]-89),[3]=(us[0X3]-0X0059)};elseif us[0X5]==149 then a8=a8-1;VK[a8]={[0X003]=(us[3]-0x7c),[0x00001]=37,[0x002]=(us[2]-124)};else(v8)[us[0X00003]]=not v8[us[2]];end;end;else if us[0x5]~=0XDC then repeat local Qg,Ig=zK,(v8);if not(#Qg>0)then else local ig=({});for Gy,ky in S,Qg do for VA,hA in S,ky do if not(hA[1]==Ig and hA[0x2]>=0X000)then else local vd=(hA[2]);if not ig[vd]then do ig[vd]={Ig[vd]};end;end;(hA)[1]=ig[vd];(hA)[2]=0x00001;end;end;end;end;until true;local ao=us[3];do return o(v8,ao,ao+us[0X2]-0X00002);end;else a8=a8-0X1;VK[a8]={[0X00002]=(us[2]-0x0D6),[0x3]=(us[0X03]-0XD6),[1]=92};end;end;else if not(Ls<34)then do if Ls~=35 then local q4=(us[3]);local N4,M4=v8[q4]();do if N4 then for nQ=0x1,us[0x5]do v8[q4+nQ]=M4[nQ];end;a8=us[2];end;end;else do(v8)[us[0X3]]=nil;end;end;end;else local Rl=us[0X3];local xl=(x(function(...)f();for at in...do(f)(true,at);end;end));(xl)(v8[Rl],v8[Rl+1],v8[Rl+0X2]);n8=Rl;v8[Rl]=xl;a8=us[2];end;end;else if not(Ls<0X1b)then do if Ls>=0X1C then if Ls~=0x001D then do(v8)[us[0x03]]=v8[us[0X002]]~=us[0X06];end;else do(v8)[us[0x3]]=v8[us[0X0002]]^v8[us[5]];end;end;else local yt=us[0X0003];v8[yt](o(v8,yt+1,n8));n8=yt-0x1;end;end;else if not(Ls>=0X19)then if us[5]==109 then do a8=a8-1;end;do(VK)[a8]={[3]=(us[0X3]-0x0e3),[1]=92,[0X02]=(us[0X02]-227)};end;else if not(v8[us[0X3]])then else a8=us[2];end;end;else do if Ls==0X1a then(v8)[us[0x03]]=v8[us[0X2]]>=v8[us[5]];else for NZ=us[3],us[0X0002]do v8[NZ]=nil;end;end;end;end;end;end;end;else do if not(Ls>=12)then if not(Ls>=6)then do if Ls>=3 then if Ls>=4 then do if Ls~=0X05 then do if us[0x5]==48 then a8=a8-1;VK[a8]={[0X2]=(us[2]-22),[1]=35,[0X3]=(us[3]-0x0016)};elseif us[5]==0X0000aB then a8=a8-0X1;(VK)[a8]={[0X1]=0X00005c,[2]=(us[2]-110),[3]=(us[0X3]-110)};elseif us[0X5]==0xAf then a8=a8-0X1;(VK)[a8]={[3]=(us[0X3]-26),[0X0002]=(us[2]-0x1a),[1]=0x00016};elseif us[0X5]==23 then a8=a8-0x0001;VK[a8]={[0X00003]=(us[0X0003]-0XB1),[1]=32,[0X02]=(us[0X0002]-177)};else local u5=(us[0X0003]);for sS=u5,u5+(us[0X2]-0X01)do do v8[sS]=U8[KK+(sS-u5)+0X0001];end;end;end;end;else local WK=(us[3]);local bK=v8[us[0X2]];v8[WK+0X1]=bK;do(v8)[WK]=bK[us[0x6]];end;end;end;else if us[0X0005]==212 then do a8=a8-0X00001;end;(VK)[a8]={[3]=(us[0X00003]-92),[2]=(us[2]-0X5c),[0X1]=83};else repeat local Lf,ef=zK,v8;if#Lf>0X0 then local hs={};do for y9,v9 in S,Lf do for fa,Ca in S,v9 do if Ca[1]==ef and Ca[2]>=0X0000 then local bu=(Ca[0X2]);if not hs[bu]then(hs)[bu]={ef[bu]};end;Ca[1]=hs[bu];Ca[2]=1;end;end;end;end;end;until true;do return;end;end;end;else do if Ls<1 then(v8)[us[3]]=v8[us[2]]+v8[us[5]];else if Ls==0X00002 then local Pp=(sK[us[0X2]]);do(v8)[us[0X3]]=Pp[1][Pp[2]];end;else(v8)[us[3]]={};end;end;end;end;end;else do if Ls<0x09 then if Ls>=0X0007 then if Ls~=8 then repeat local pF,aF=zK,v8;if not(#pF>0)then else local VB=({});do for qs,Ns in S,pF do for hN,qN in S,Ns do if qN[0X01]==aF and qN[0X2]>=0x0 then local ub=qN[0X02];if not(not VB[ub])then else VB[ub]={aF[ub]};end;(qN)[1]=VB[ub];do qN[2]=0X1;end;end;end;end;end;end;until true;local jo=(us[0X3]);return v8[jo](o(v8,jo+0X001,n8));else(v8)[us[3]]=v8[us[0X002]]%v8[us[0x5]];end;else if v8[us[0X2]]~=v8[us[0X5]]then else a8=us[3];end;end;else do if Ls>=0xa then if Ls~=11 then local Ja=(sK[us[2]]);Ja[0x00001][Ja[0X2]]=v8[us[3]];else do if v8[us[2]]~=v8[us[0X05]]then a8=us[3];end;end;end;else if us[0X0005]==69 then a8=a8-1;do(VK)[a8]={[0x2]=(us[0X00002]-210),[0x00001]=83,[0X3]=(us[3]-0X00d2)};end;else(v8)[us[3]]=U8[KK+1];end;end;end;end;end;end;else if Ls>=0X12 then do if not(Ls>=21)then do if Ls>=0X13 then if Ls==20 then z8[us[0X7]]=v8[us[3]];else(v8)[us[3]]=false;end;else v8[us[3]]={o({},0X1,us[2])};end;end;else if not(Ls<22)then if Ls==0X17 then local pm=(us[0X00003]);v8[pm](v8[pm+1],v8[pm+0x02]);n8=pm-0X1;else if us[0X5]==0X0007f then a8=a8-1;(VK)[a8]={[0X3]=(us[0x00003]-0X77),[0x02]=(us[2]-119),[1]=0x01e};elseif us[5]~=228 then do v8[us[3]]=#v8[us[0X02]];end;else a8=a8-1;(VK)[a8]={[0X2]=(us[0x2]-69),[1]=37,[0x03]=(us[3]-0x45)};end;end;else local YP=(us[3]);local UP,BP=v8[YP],(us[0X05]-0X1)*0X32;for SR=1,n8-YP do(UP)[BP+SR]=v8[YP+SR];end;end;end;end;else if not(Ls<0x000f)then if not(Ls<0X10)then do if Ls~=0X11 then(v8)[us[0X3]]=F(v8[us[0X2]],v8[us[0x0005]]);else do a8=us[0x2];end;end;end;else do if not(v8[us[0X2]]<=v8[us[0X5]])then else a8=us[0X3];end;end;end;else do if not(Ls<0x0000D)then if Ls~=0X000e then local rf=v8[us[2]]/v8[us[5]];(v8)[us[0X3]]=rf-rf%1;else do(v8)[us[0X3]]=v8[us[2]]*us[0X06];end;end;else(v8)[us[0X3]]=v8[us[2]]*v8[us[0X5]];end;end;end;end;end;end;end;end;elseif not(Ls>=0X048)then if Ls<60 then do if not(Ls>=0X36)then if not(Ls<51)then if not(Ls<52)then if Ls~=53 then(v8)[us[3]]=v8[us[0X0002]]-v8[us[5]];else(v8)[us[0X3]]=true;end;else local oL,IL,VL=us[0X3],us[2],(us[5]);do if IL==0 then else n8=oL+IL-1;end;end;local HL,iL=nil,nil;if IL~=1 then HL,iL=Br(v8[oL](o(v8,oL+0x1,n8)));else do HL,iL=Br(v8[oL]());end;end;if VL==1 then do n8=oL-0x1;end;else if VL~=0X0 then HL=oL+VL-2;n8=HL+1;else HL=HL+oL-0X1;n8=HL;end;local RK=0X0;for Mj=oL,HL do RK=RK+1;do v8[Mj]=iL[RK];end;end;end;end;else do if Ls>=0x31 then if Ls~=0X32 then v8[us[0X3]]=v8[us[0x2]]~=v8[us[5]];else(v8)[us[3]]=v8[us[2]]>=us[6];end;else local EV=(us[0x00003]);local zV,LV=v8[EV+0x00001],(v8[EV+2]);local ZV=(v8[EV]);do v8[EV]=x(function()for Uh=ZV,zV,LV do f(true,Uh);end;end);end;a8=us[2];end;end;end;else do if Ls>=57 then if Ls<58 then(v8)[us[3]]=Lr[us[2]];else if Ls==59 then repeat local QV,yV=zK,v8;do if#QV>0X0 then local dW=({});for AM,IM in S,QV do for JK,dK in S,IM do if not(dK[1]==yV and dK[0X2]>=0)then else local LS=dK[0X2];do if not(not dW[LS])then else dW[LS]={yV[LS]};end;end;dK[0x1]=dW[LS];(dK)[2]=1;end;end;end;end;end;until true;local RJ=us[3];return v8[RJ](v8[RJ+1]);else v8[us[3]]=q(v8[us[0X2]]);end;end;else if not(Ls<0X037)then if Ls~=0X00038 then local N_=us[0X3];n8=N_+us[0X2]-1;(v8)[N_]=v8[N_](o(v8,N_+1,n8));n8=N_;else local DK=us[3];n8=DK+us[0X00002]-1;v8[DK](o(v8,DK+1,n8));do n8=DK-0X0001;end;end;else do v8[us[0X0003]]=v8[us[0X2]]<v8[us[5]];end;end;end;end;end;end;else if not(Ls>=66)then if Ls<63 then do if not(Ls>=0X00003D)then(v8)[us[3]]=P(v8[us[0X2]],v8[us[0X5]]);else if Ls~=0X0003E then do if not(not v8[us[0X3]])then else a8=us[2];end;end;else v8[us[0X3]]=z8[us[7]];end;end;end;else if Ls>=64 then if Ls~=0x41 then local Ti=us[3];local ci,Wi=v8[Ti]();if not(ci)then else do(v8)[Ti+1]=Wi;end;do a8=us[0X2];end;end;else local y2=(us[3]);v8[y2](v8[y2+0X00001]);n8=y2-1;end;else if us[5]==184 then do a8=a8-0X01;end;do VK[a8]={[2]=(us[0x0002]-0X004f),[1]=0X3,[0X3]=(us[3]-79)};end;else(v8)[us[3]]=-v8[us[0X2]];end;end;end;else do if Ls<0x45 then do if Ls<67 then do if us[5]==126 then a8=a8-0X01;do VK[a8]={[2]=(us[0X2]-0x3C),[3]=(us[0X3]-0X3c),[0x1]=47};end;elseif us[0X5]==54 then a8=a8-1;(VK)[a8]={[0X2]=(us[2]-55),[0x001]=22,[0X3]=(us[3]-0X000037)};else do repeat local pr,tr,Z4=zK,v8,(us[3]);if not(#pr>0x0000)then else local BG=({});for Kl,zl in S,pr do do for wN,YN in S,zl do if YN[1]==tr and YN[0X2]>=Z4 then local Kv=(YN[0X2]);do if not(not BG[Kv])then else(BG)[Kv]={tr[Kv]};end;end;YN[1]=BG[Kv];(YN)[2]=1;end;end;end;end;end;until true;end;end;end;else if Ls==68 then do(v8[us[3]])[v8[us[2]]]=us[0x00006];end;else local cm=us[3];local Nm=(x(function(...)(f)();do for F5,B5,X5,l5,a5,N5,Z5,S5,Y5,O5 in...do f(true,{F5,B5,X5,l5,a5,N5,Z5,S5,Y5,O5});end;end;end));(Nm)(v8[cm],v8[cm+0X1],v8[cm+0X002]);n8=cm;(v8)[cm]=Nm;a8=us[2];end;end;end;else do if Ls>=0X046 then if Ls~=0X47 then do v8[us[3]]=v8[us[0X2]]<us[0X006];end;else local q9=us[3];(v8)[q9]=v8[q9](v8[q9+1],v8[q9+2]);n8=q9;end;else if v8[us[2]]==us[6]then else a8=us[0X3];end;end;end;end;end;end;end;else if not(Ls<0X54)then if Ls>=90 then if not(Ls<93)then if not(Ls<95)then if Ls~=96 then local wC=(us[0X3]);local aC=x(function(...)f();do for xV,iV in...do f(true,xV,iV);end;end;end);aC(v8[wC],v8[wC+1],v8[wC+0X02]);n8=wC;v8[wC]=aC;a8=us[2];else local p1=(us[0x3]);do v8[p1]=v8[p1](v8[p1+1]);end;n8=p1;end;else do if Ls~=94 then v8[us[0X3]][us[7]]=us[6];else do if not(not(v8[us[2]]<=v8[us[5]]))then else a8=us[3];end;end;end;end;end;else if Ls<0x5B then do v8[us[3]]=v8[us[0x2]][us[0X6]];end;else do if Ls~=0X005c then v8[us[3]]=v8[us[0x02]]/us[6];else repeat local u3,g3=zK,v8;if not(#u3>0)then else local rx=({});do for YZ,aZ in S,u3 do for XO,qO in S,aZ do if qO[0X001]==g3 and qO[2]>=0 then local Rc=qO[0X2];if not rx[Rc]then rx[Rc]={g3[Rc]};end;do(qO)[1]=rx[Rc];end;qO[2]=0X1;end;end;end;end;end;until true;return v8[us[0X03]];end;end;end;end;else do if Ls>=87 then if Ls<0x0058 then do if v8[us[2]]~=us[6]then else a8=us[3];end;end;else if Ls==0X059 then(v8)[us[3]]=v8[us[2]]<=v8[us[5]];else n8=us[0X3];(v8)[n8]=v8[n8]();end;end;else if not(Ls>=85)then do if not(v8[us[2]]<v8[us[5]])then do a8=us[3];end;end;end;else if Ls==0X056 then(v8)[us[3]]=v8[us[0X2]][v8[us[0X00005]]];else do(v8)[us[0X003]]=k(v8[us[0x00002]],v8[us[0x0005]]);end;end;end;end;end;end;else if not(Ls>=0x4E)then if Ls>=75 then if not(Ls>=0X4c)then do repeat local WO,kO=zK,v8;if not(#WO>0X0)then else local IK=({});for Uu,uu in S,WO do do for N1,I1 in S,uu do do if I1[0X1]==kO and I1[0X02]>=0x00000 then local ap=I1[2];if not(not IK[ap])then else(IK)[ap]={kO[ap]};end;I1[1]=IK[ap];(I1)[0X2]=1;end;end;end;end;end;end;until true;end;return v8[us[3]]();else if Ls~=0X4d then local Mn=(us[2]);local rn=(v8[Mn]);for pr=Mn+0x1,us[0X005]do do rn=rn..v8[pr];end;end;(v8)[us[0x03]]=rn;else(v8)[us[3]]=v8[us[2]]%us[6];end;end;else do if not(Ls>=0X49)then local e8=(us[0X2]);v8[us[0X3]]=v8[e8]..v8[e8+0X01];else if Ls==0X4A then v8[us[0x3]][v8[us[2]]]=v8[us[5]];else(v8[us[3]])[us[0X7]]=v8[us[5]];end;end;end;end;else if Ls>=81 then if Ls<0x52 then do Lr[us[2]]=v8[us[3]];end;else do if Ls==83 then if us[5]~=195 then do v8[us[0X03]]=v8[us[0X2]];end;else a8=a8-1;VK[a8]={[2]=(us[2]-172),[0x00001]=35,[3]=(us[3]-0xAc)};end;else v8[us[3]]=z(v8[us[2]],v8[us[0x5]]);end;end;end;else if Ls>=79 then if Ls~=80 then v8[us[0X03]]=us[7];else local g9=us[0X3];v8[g9]=v8[g9](o(v8,g9+1,n8));do n8=g9;end;end;else(v8)[us[3]]=v8[us[0X2]]==v8[us[5]];end;end;end;end;end;until false;end;(C)(gK,TK);return gK;end;hr=5;end;else do k=Fr;end;do hr=6;end;end;end;end;end;end;do Lr[Xr]=Nr;end;Nr=Ur;return Jr(Mr,Ur,U)(...);end)(4,bit32.bnot,2,true,table,tostring,string.match,rawset,0x01000000,unpack,coroutine,string.gsub,"",select,ipairs,bit32.rshift,tonumber,-1241166646,bit32.band,"<I4",bit32.bxor,type,0X0D6,bit32.lshift,6,nil,0X000,"..",1,string,string.rep,5,0x0003,false,-1525015523,setmetatable,0.6402497105680709,0X12E0e,rawget,...);
>>>>>>> 26df0a6e67aa503a2619381cd82c0a66afed1e10
